Vagrant.require_version ">= 1.5.3"
unless Vagrant.has_plugin?("vagrant-vbguest")
  raise "Please install the vagrant-vbguest plugin by running `vagrant plugin install vagrant-vbguest`"
end

VAGRANTFILE_API_VERSION = "2"

# Needed to accommodate compilation of SciPy and NumPy
MEMORY = 4096
CPU_COUNT = 2

edx_platform_mount_dir = "edx-platform"
edx_ecommerce_mount_dir = "edx-ecommerce"
oscar_extensions_mount_dir = "django-oscar-extensions"

if ENV['VAGRANT_MOUNT_BASE']

  edx_platform_mount_dir = ENV['VAGRANT_MOUNT_BASE'] + "/" + edx_platform_mount_dir
  edx_ecommerce_mount_dir = ENV['VAGRANT_MOUNT_BASE'] + "/" + edx_ecommerce_mount_dir
  oscar_extensions_mount_dir = ENV['VAGRANT_MOUNT_BASE'] + "/" + oscar_extensions_mount_dir

end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Creates a Vagrant machine from a base Ubuntu 12.04 image for virtualbox
  config.vm.box = "precise64"
  config.vm.box_url = "http://files.vagrantup.com/precise64.box"

  config.vm.network :private_network, ip: "192.168.33.10"
  config.vm.network :forwarded_port, guest: 8000, host: 8000
  config.vm.network :forwarded_port, guest: 8001, host: 8001
  config.vm.network :forwarded_port, guest: 8002, host: 8002
  config.ssh.insert_key = true

  config.vm.synced_folder ".", "/vagrant", disabled: true

 # Enable X11 forwarding so we can interact with GUI applications
  if ENV['VAGRANT_X11']
    config.ssh.forward_x11 = true
  end

  if ENV['VAGRANT_USE_VBOXFS'] == 'true'
    config.vm.synced_folder "#{edx_platform_mount_dir}", "/edx/app/edxapp/edx-platform",
      create: true, owner: "edxapp", group: "www-data"
    config.vm.synced_folder "#{edx_ecommerce_mount_dir}", "/edx/app/ecom/edx-ecommerce",
      create: true, owner: "edxapp", group: "www-data"
    config.vm.synced_folder "#{oscar_extensions_mount_dir}", "/edx/app/ecom/django-oscar-extensions",
      create: true, owner: "edxapp", group: "www-data"
  else
    config.vm.synced_folder "#{edx_platform_mount_dir}", "/edx/app/edxapp/edx-platform",
      create: true, nfs: true
    config.vm.synced_folder "#{edx_ecommerce_mount_dir}", "/edx/app/ecom/edx-ecommerce",
      create: true, nfs: true
    config.vm.synced_folder "#{oscar_extensions_mount_dir}", "/edx/app/ecom/django-oscar-extensions",
      create: true, nfs: true
  end


  config.vm.provider :virtualbox do |vb|
    vb.customize ["modifyvm", :id, "--memory", MEMORY.to_s]
    vb.customize ["modifyvm", :id, "--cpus", CPU_COUNT.to_s]

    # Allow DNS to work for Ubuntu 12.10 host
    # http://askubuntu.com/questions/238040/how-do-i-fix-name-service-for-vagrant-client
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  end

  ["vmware_fusion", "vmware_workstation"].each do |vmware_provider|
    config.vm.provider vmware_provider do |v, override|
      # Override box url to get vmware one
      override.vm.box = "precise64_vmware"
      override.vm.box_url = "http://files.vagrantup.com/precise64_vmware.box"
      v.vmx["memsize"] = MEMORY.to_s
      v.vmx["numvcpus"] = CPU_COUNT.to_s
    end
  end


  # Make LC_ALL default to en_US.UTF-8 instead of en_US.
  # See: https://github.com/mitchellh/vagrant/issues/1188
  config.vm.provision "shell", inline: 'echo \'LC_ALL="en_US.UTF-8"\' > /etc/default/locale'

  # Use vagrant-vbguest plugin to make sure Guest Additions are in sync
  config.vbguest.auto_reboot = true
  config.vbguest.auto_update = true

  config.vm.provision :ansible do |ansible|
    ansible.playbook = "../../../playbooks/vagrant-ecomstack.yml"
    ansible.verbose = "vvvv"

    ansible.extra_vars = {}
    if ENV['OPENEDX_RELEASE']
      ansible.extra_vars = {
        edx_platform_version: ENV['OPENEDX_RELEASE'],
      }
    end
  end
end
