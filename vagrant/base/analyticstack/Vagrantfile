Vagrant.require_version ">= 1.6.5"
unless Vagrant.has_plugin?("vagrant-vbguest")
  raise "Please install the vagrant-vbguest plugin by running `vagrant plugin install vagrant-vbguest`"
end

VAGRANTFILE_API_VERSION = "2"

MEMORY = 4096
CPU_COUNT = 2

vm_guest_ip = "192.168.33.10"
if ENV["VAGRANT_GUEST_IP"]
  vm_guest_ip = ENV["VAGRANT_GUEST_IP"]
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Creates a devstack from a base Ubuntu 12.04 image for virtualbox
  config.vm.box     = "precise64"
  config.vm.box_url = "http://files.vagrantup.com/precise64.box"

  config.vm.network :private_network, ip: vm_guest_ip

  # If you want to run the box but don't need network ports, set VAGRANT_NO_PORTS=1.
  # This is useful if you want to run more than one box at once.
  if not ENV['VAGRANT_NO_PORTS']
    config.vm.network :forwarded_port, guest: 8000, host: 8000  # LMS
    config.vm.network :forwarded_port, guest: 8001, host: 8001  # Studio
    config.vm.network :forwarded_port, guest: 8003, host: 8003  # LMS for Bok Choy
    config.vm.network :forwarded_port, guest: 8031, host: 8031  # Studio for Bok Choy
    config.vm.network :forwarded_port, guest: 8120, host: 8120  # edX Notes Service
    config.vm.network :forwarded_port, guest: 8765, host: 8765
    config.vm.network :forwarded_port, guest: 9200, host: 9200
    config.vm.network :forwarded_port, guest: 18080, host: 18080
    config.vm.network :forwarded_port, guest: 8100, host: 8100  # Analytics Data API
    config.vm.network :forwarded_port, guest: 8110, host: 8110  # Insights
    config.vm.network :forwarded_port, guest: 50070, host: 50070  # HDFS Admin UI
    config.vm.network :forwarded_port, guest: 8088, host: 8088  # Hadoop Resource Manager
  end

  config.ssh.insert_key = true

 # Enable X11 forwarding so we can interact with GUI applications
  if ENV['VAGRANT_X11']
    config.ssh.forward_x11 = true
  end

  config.vm.provider :virtualbox do |vb|
    vb.customize ["modifyvm", :id, "--memory", MEMORY.to_s]
    vb.customize ["modifyvm", :id, "--cpus", CPU_COUNT.to_s]

    # Allow DNS to work for Ubuntu 12.10 host
    # http://askubuntu.com/questions/238040/how-do-i-fix-name-service-for-vagrant-client
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  end


  # Make LC_ALL default to en_US.UTF-8 instead of en_US.
  # See: https://github.com/mitchellh/vagrant/issues/1188
  config.vm.provision "shell", inline: 'echo \'LC_ALL="en_US.UTF-8"\' > /etc/default/locale'

  # Use vagrant-vbguest plugin to make sure Guest Additions are in sync
  config.vbguest.auto_reboot = true
  config.vbguest.auto_update = true

  config.vm.provision :ansible do |ansible|
    ansible.playbook = "../../../playbooks/vagrant-analytics.yml"
    ansible.verbose = "vvvv"

    ansible.extra_vars = {}
    if ENV['OPENEDX_RELEASE']
      ansible.extra_vars = {
        edx_platform_version: ENV['OPENEDX_RELEASE'],
        configuration_version: ENV['OPENEDX_RELEASE'],
        certs_version: ENV['OPENEDX_RELEASE'],
        forum_version: ENV['OPENEDX_RELEASE'],
        xqueue_version: ENV['OPENEDX_RELEASE'],
      }
    end
    if ENV['CONFIGURATION_VERSION']
      ansible.extra_vars['configuration_version'] = ENV['CONFIGURATION_VERSION']
    end
    if ENV['EDX_PLATFORM_VERSION']
      ansible.extra_vars['edx_platform_version'] = ENV['EDX_PLATFORM_VERSION']
    end
  end
end
