---

- hosts: kerberos_server
  sudo: True
  vars:
    - cdh_credentials_staging_path: /var/lib/ansible/hadoop/staging/credentials
  tasks:

    - name: cdh-secure | local temp directory created
      local_action: file path=/tmp/ansible-hadoop state=directory
      sudo: False
      tags:
        - cdh-secure
        - credentials

    - name: cdh-secure | staged credentials removed
      file: path={{ cdh_credentials_staging_path }}/hadoop.truststore state=absent
      tags:
        - cdh-secure
        - credentials
        - unsafe

- hosts: cdh_all
  sudo: True
  vars:
    - cdh_credentials_staging_path: /var/lib/ansible/hadoop/staging/credentials
  serial: 1
  tasks:

    - name: cdh-secure | principals created
      kerberos_principal: name={{ item }}/{{ ansible_fqdn }}
      delegate_to: "{{ groups.kerberos_server[0] }}"
      with_items:
        - mapred
        - hdfs
        - HTTP
      register: principals_created
      tags:
        - cdh-secure
        - credentials

    - name: cdh-secure | staged credentials removed
      file: path={{ cdh_credentials_staging_path }}/{{ inventory_hostname }}/{{ item }} state=absent
      delegate_to: "{{ groups.kerberos_server[0] }}"
      with_items:
        - mapred.keytab
        - hdfs.keytab
      when: principals_created.changed
      tags:
        - cdh-secure
        - credentials
        - unsafe

    - name: cdh-secure | credential staging directory
      file: path={{ cdh_credentials_staging_path }}/{{ inventory_hostname }} state=directory
      delegate_to: "{{ groups.kerberos_server[0] }}"
      tags:
        - cdh-secure
        - credentials

    - name: cdh-secure | keytabs created
      command: /usr/sbin/kadmin.local -q 'xst -norandkey -k {{ cdh_credentials_staging_path }}/{{ inventory_hostname }}/{{ item }}.keytab {{ item }}/{{ ansible_fqdn }} HTTP/{{ ansible_fqdn }}' creates={{ cdh_credentials_staging_path }}/{{ inventory_hostname }}/{{ item }}.keytab
      delegate_to: "{{ groups.kerberos_server[0] }}"
      with_items:
        - mapred
        - hdfs
      tags:
        - cdh-secure
        - credentials

    - name: cdh-secure | keystores created
      command: /usr/bin/keytool -genkey -keystore {{ cdh_credentials_staging_path }}/{{ inventory_hostname }}/https.keystore -keyalg RSA -alias {{ ansible_hostname }} -dname "CN={{ ansible_fqdn }},O=Hadoop" -keypass hadoop -storepass hadoop creates={{ cdh_credentials_staging_path }}/{{ inventory_hostname }}/https.keystore
      delegate_to: "{{ groups.kerberos_server[0] }}"
      tags:
        - cdh-secure
        - credentials

    - name: cdh-secure | certs exported
      command: /usr/bin/keytool -exportcert -keystore {{ cdh_credentials_staging_path }}/{{ inventory_hostname }}/https.keystore -alias {{ ansible_hostname }} -file {{ cdh_credentials_staging_path }}/{{ inventory_hostname }}/https.cert -storepass hadoop creates={{ cdh_credentials_staging_path }}/{{ inventory_hostname }}/https.cert
      delegate_to: "{{ groups.kerberos_server[0] }}"
      tags:
        - cdh-secure
        - credentials

    - name: cdh-secure | credentials downloaded
      fetch: src={{ cdh_credentials_staging_path }}/{{ inventory_hostname }}/{{ item }} dest=/tmp/ansible-hadoop/{{ inventory_hostname }}/ flat=yes
      delegate_to: "{{ groups.kerberos_server[0] }}"
      with_items:
        - https.keystore
        - hdfs.keytab
        - mapred.keytab
      tags:
        - cdh-secure
        - credentials

    - name: cdh-secure | certs added to trust store
      command: /usr/bin/keytool -import -keystore {{ cdh_credentials_staging_path }}/hadoop.truststore -alias {{ ansible_hostname }} -file {{ cdh_credentials_staging_path }}/{{ inventory_hostname }}/https.cert -noprompt -storepass hadoop
      delegate_to: "{{ groups.kerberos_server[0] }}"
      tags:
        - cdh-secure
        - credentials

- hosts: cdh_all
  sudo: True
  vars:
    - cdh_credentials_staging_path: /var/lib/ansible/hadoop/staging/credentials
  tasks:

    - name: cdh-secure | trust store downloaded
      fetch: src={{ cdh_credentials_staging_path }}/hadoop.truststore dest=/tmp/ansible-hadoop/{{ inventory_hostname }}/ flat=yes
      delegate_to: "{{ groups.kerberos_server[0] }}"
      tags:
        - cdh-secure
        - credentials

- hosts: cdh_all
  sudo: True
  vars:
    - cdh_credentials_path: /var/lib/ansible/hadoop/credentials
  tasks:

    - name: cdh-secure | credentials directory
      file: path={{ cdh_credentials_path }} state=directory mode=0777
      tags:
        - cdh-secure
        - credentials

    - name: cdh-secure | credentials uploaded
      copy: src=/tmp/ansible-hadoop/{{ inventory_hostname }}/{{ item.name }} dest={{ cdh_credentials_path }}/{{ item.name }} owner={{ item.owner }} group=hadoop mode={{ item.mode }}
      with_items:
        - { name: mapred.keytab, owner: mapred, mode: '0400' }
        - { name: hdfs.keytab, owner: hdfs, mode: '0400' }
        - { name: hadoop.truststore, owner: root, mode: '0444' }
        - { name: https.keystore, owner: root, mode: '0440' }
      tags:
        - cdh-secure
        - credentials

    - name: cdh-secure | credential links created
      file: src={{ cdh_credentials_path }}/{{ item }} dest=/etc/hadoop/conf/{{ item }} state=link
      with_items:
        - mapred.keytab
        - hdfs.keytab
        - hadoop.truststore
        - https.keystore
      tags:
        - cdh-secure
        - credentials
