---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://github.com/edx/configuration/wiki
# code style: https://github.com/edx/configuration/wiki/Ansible-Coding-Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
#
#
# Tasks for role discovery
# 
# Overview:
# 
#
# Dependencies:
#
# 
# Example play:
#
#

- name: add gunicorn configuration file
  template:
    src: edx/app/discovery/discovery_gunicorn.py.j2
    dest: "{{ discovery_home }}/discovery_gunicorn.py"
  sudo_user: "{{ discovery_user }}"
  tags:
    - install
    - install:configuration

- name: add deadsnakes repository
  apt_repository:
    repo: "ppa:fkrull/deadsnakes"
  tags:
    - install
    - install:system-requirements

- name: install python3.5
  apt: 
    name: "{{ item }}"
  with_items:
    - python3.5
    - python3.5-dev
  tags:
    - install
    - install:system-requirements

- name: build virtualenv
  command: "virtualenv --python=python3.5 {{ discovery_venv_dir }}"
  args:
    creates: "{{ discovery_venv_dir }}/bin/pip"
  sudo_user: "{{ discovery_user }}"
  tags:
    - install
    - install:system-requirements

- name: install application requirements
  command: make production-requirements
  args:
    chdir: "{{ discovery_code_dir }}"
  sudo_user: "{{ discovery_user }}"
  environment: "{{ discovery_environment }}"
  tags:
    - install
    - install:app-requirements

- name: install development requirements
  command: make requirements
  args:
    chdir: "{{ discovery_code_dir }}"
  sudo_user: "{{ discovery_user }}"
  environment: "{{ discovery_environment }}"
  tags:
    - devstack
    - devstack:install

- name: wait for database
  wait_for:
    host: "{{ DISCOVERY_DATABASES.default.HOST }}"
    port: "{{ DISCOVERY_DATABASES.default.PORT }}"
    delay: 2
  tags:
    - migrate
    - migrate:install

- name: create databases
  mysql_db:
    login_host: "{{ DISCOVERY_DATABASES.default.HOST }}"
    login_user: "{{ DISCOVERY_DB_ADMIN_USER }}"
    login_password: "{{ DISCOVERY_DB_ADMIN_PASSWORD }}"
    db: "{{ DISCOVERY_DEFAULT_DB_NAME }}"
    state: present
    encoding: utf8
  tags:
    - migrate
    - migrate:install

- name: create database users
  mysql_user:
    login_host: "{{ DISCOVERY_DATABASES.default.HOST }}"
    login_user: "{{ DISCOVERY_DB_ADMIN_USER }}"
    login_password: "{{ DISCOVERY_DB_ADMIN_PASSWORD }}"
    name: "{{ item.name }}"
    host: "{{ DISCOVERY_MYSQL_MATCHER }}"
    password: "{{ item.password }}"
    priv: "{{ DISCOVERY_DEFAULT_DB_NAME }}.*:ALL"
    append_privs: yes
  with_items:
    - name: "{{ DISCOVERY_DATABASES.default.USER }}"
      password: "{{ DISCOVERY_DATABASES.default.PASSWORD }}"
    - name: "{{ COMMON_MYSQL_MIGRATE_USER }}"
      password: "{{ COMMON_MYSQL_MIGRATE_PASS }}"
  tags:
    - migrate
    - migrate:install

- name: migrate database
  command: make migrate
  args:
    chdir: "{{ discovery_code_dir }}"
  sudo_user: "{{ discovery_user }}"
  environment: "{{ discovery_migration_environment }}"
  when: migrate_db is defined and migrate_db|lower == "yes"
  tags:
    - migrate
    - migrate:db

- name: write out the supervisor wrapper
  template:
    src: "edx/app/discovery/discovery.sh.j2"
    dest: "{{ discovery_home }}/{{ discovery_service_name }}.sh"
    mode: 0650
    owner: "{{ supervisor_user }}"
    group: "{{ common_web_user }}"
  tags:
    - install
    - install:configuration

- name: write supervisord config
  template:
    src: "edx/app/supervisor/conf.d.available/discovery.conf.j2"
    dest: "{{ supervisor_available_dir }}/{{ discovery_service_name }}.conf"
    owner: "{{ supervisor_user }}"
    group: "{{ common_web_user }}"
    mode: 0644
  tags:
    - install
    - install:configuration

- name: write devstack script
  template:
    src: "edx/app/discovery/devstack.sh.j2"
    dest: "{{ discovery_home }}/devstack.sh"
    owner: "{{ supervisor_user }}"
    group: "{{ common_web_user }}"
    mode: 0744
  tags:
    - devstack
    - devstack:install

- name: setup the discovery env file
  template:
    src: "./{{ discovery_home }}/{{ discovery_service_name }}_env.j2"
    dest: "{{ discovery_home }}/discovery_env"
    owner: "{{ discovery_user }}"
    group: "{{ discovery_user }}"
    mode: 0644
  tags:
    - install
    - install:configuration

- name: enable supervisor script
  file:
    src: "{{ supervisor_available_dir }}/{{ discovery_service_name }}.conf"
    dest: "{{ supervisor_cfg_dir }}/{{ discovery_service_name }}.conf"
    state: link
    force: yes
  when: not disable_edx_services
  tags:
    - install
    - install:configuration

- name: update supervisor configuration
  command: "{{ supervisor_ctl }} -c {{ supervisor_cfg }} update"
  when: not disable_edx_services
  tags:
    - manage
    - manage:start

- name: create symlinks from the venv bin dir
  file:
    src: "{{ discovery_venv_dir }}/bin/{{ item }}"
    dest: "{{ COMMON_BIN_DIR }}/{{ item.split('.')[0] }}.discovery"
    state: link
  with_items:
    - python
    - pip
    - django-admin.py
  tags:
    - install
    - install:app-requirements

- name: create symlinks from the repo dir
  file:
    src: "{{ discovery_code_dir }}/{{ item }}"
    dest: "{{ COMMON_BIN_DIR }}/{{ item.split('.')[0] }}.discovery"
    state: link
  with_items:
    - manage.py
  tags:
    - install
    - install:app-requirements
    
- name: run collectstatic
  command: make static
  args:
    chdir: "{{ discovery_code_dir }}"
  sudo_user: "{{ discovery_user }}"
  environment: "{{ discovery_environment }}"
  tags:
    - assets
    - assets:gather

- name: restart the application
  supervisorctl: 
    state: restarted
    supervisorctl_path: "{{ supervisor_ctl }}"
    config: "{{ supervisor_cfg }}"
    name: "{{ discovery_service_name }}"
  when: not disable_edx_services
  sudo_user: "{{ supervisor_service_user }}"
  tags:
    - manage
    - manage:start

- name: Copying nginx configs for discovery
  template:
    src: "edx/app/nginx/sites-available/discovery.j2"
    dest: "{{ nginx_sites_available_dir }}/discovery"
    owner: root 
    group: "{{ common_web_user }}"
    mode: 0640
  notify: reload nginx
  tags:
    - install
    - install:vhosts

- name: Creating nginx config links for discovery
  file:
    src: "{{ nginx_sites_available_dir }}/discovery"
    dest: "{{ nginx_sites_enabled_dir }}/discovery"
    state: link 
    owner: root 
    group: root
  notify: reload nginx
  tags:
    - install
    - install:vhosts

