---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://openedx.atlassian.net/wiki/display/OpenOPS
# code style: https://openedx.atlassian.net/wiki/display/OpenOPS/Ansible+Code+Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
##
# Defaults for role credentials
#


#
# vars are namespace with the module name.
#
credentials_service_name: "credentials"

credentials_environment:
  CREDENTIALS_CFG: "{{ COMMON_CFG_DIR }}/{{ credentials_service_name }}.yml"

credentials_gunicorn_port: 8150

#
# OS packages
#

credentials_debian_pkgs:
  # Needed to manipulate images.
  - libjpeg8-dev
  - libpng12-dev

credentials_redhat_pkgs: []

CREDENTIALS_NGINX_PORT: "1{{ credentials_gunicorn_port }}"
CREDENTIALS_SSL_NGINX_PORT: "4{{ credentials_gunicorn_port }}"

CREDENTIALS_DEFAULT_DB_NAME: 'credentials'
CREDENTIALS_MYSQL_HOST: 'localhost'
# MySQL usernames are limited to 16 characters
CREDENTIALS_MYSQL_USER: 'credentials001'
CREDENTIALS_MYSQL_PASSWORD: 'password'

CREDENTIALS_MEMCACHE: [ 'memcache' ]

CREDENTIALS_DJANGO_SETTINGS_MODULE: "credentials.settings.production"
CREDENTIALS_DOMAIN: 'credentials'
CREDENTIALS_URL_ROOT: 'http://{{ CREDENTIALS_DOMAIN }}:{{ CREDENTIALS_NGINX_PORT }}'
CREDENTIALS_LOGOUT_URL: '{{ CREDENTIALS_URL_ROOT }}/logout/'
CREDENTIALS_OAUTH_URL_ROOT: '{{ EDXAPP_LMS_ROOT_URL | default("http://127.0.0.1:8000") }}/oauth2'
CREDENTIALS_OIDC_LOGOUT_URL: '{{ EDXAPP_LMS_PUBLIC_ROOT_URL | default("http://127.0.0.1:8000") }}/logout'

CREDENTIALS_SECRET_KEY: 'SET-ME-TO-A-UNIQUE-LONG-RANDOM-STRING'
CREDENTIALS_TIME_ZONE: 'UTC'
CREDENTIALS_LANGUAGE_CODE: 'en_US.UTF-8'

# Used to automatically configure OAuth2 Client
CREDENTIALS_SOCIAL_AUTH_EDX_OIDC_KEY: 'credentials-key'
CREDENTIALS_SOCIAL_AUTH_EDX_OIDC_SECRET: 'credentials-secret'
CREDENTIALS_SOCIAL_AUTH_REDIRECT_IS_HTTPS: false

# credentials service user in programs service and lms
CREDENTIALS_SERVICE_USER: 'credentials_service_user'

# Absolute URL used to get user data from the user api in LMS
CREDENTIALS_USER_API_URL: '{{ EDXAPP_LMS_ROOT_URL }}/api/user/v1/'
CREDENTIALS_USER_API_JWT_AUDIENCE: '{{ EDXAPP_JWT_AUDIENCE | default("lms-key") }}'
CREDENTIALS_USER_API_JWT_SECRET_KEY: '{{ EDXAPP_JWT_SECRET_KEY | default("lms-secret") }}'

CREDENTIALS_DATA_DIR: '{{ COMMON_DATA_DIR }}/{{ credentials_service_name }}'
CREDENTIALS_MEDIA_ROOT: '{{ CREDENTIALS_DATA_DIR }}/media'
CREDENTIALS_STATIC_ROOT: '{{ CREDENTIALS_DATA_DIR }}/staticfiles'
CREDENTIALS_MEDIA_URL: '/media/'
CREDENTIALS_STATIC_URL: '/static/'

# Example settings to use Amazon S3 as a storage backend with django storages:
# https://django-storages.readthedocs.org/en/latest/backends/amazon-S3.html#amazon-s3
#
# Note, AWS_S3_CUSTOM_DOMAIN is required, otherwise boto will generate non-working
# querystring URLs for assets (see https://github.com/boto/boto/issues/1477)
#
# CREDENTIALS_BUCKET: mybucket
# credentials_s3_domain: s3.amazonaws.com
# CREDENTIALS_MEDIA_ROOT: 'media'
# CREDENTIALS_STATIC_ROOT: 'static'
#
# CREDENTIALS_FILE_STORAGE_BACKEND:
#  AWS_STORAGE_BUCKET_NAME: '{{ CREDENTIALS_BUCKET }}'
#  AWS_S3_CUSTOM_DOMAIN: '{{ CREDENTIALS_BUCKET }}.{{ credentials_s3_domain }}'
#  AWS_ACCESS_KEY_ID: 'XXXAWS_ACCESS_KEYXXX'
#  AWS_SECRET_ACCESS_KEY: 'XXXAWS_SECRET_KEYXXX'
#  AWS_QUERYSTRING_AUTH: False
#  AWS_QUERYSTRING_EXPIRE: False
#  AWS_DEFAULT_ACL: ''
#  AWS_HEADERS:
#    Access-Control-Allow-Origin: 'PUT-YOUR-HOSTNAME-HERE'
#
#  MEDIA_ROOT: '{{ CREDENTIALS_MEDIA_ROOT }}'
#  STATIC_ROOT: '{{ CREDENTIALS_STATIC_ROOT }}'
#
#  MEDIA_URL:    'https://{{ CREDENTIALS_BUCKET }}.{{ credentials_s3_domain }}{{ CREDENTIALS_MEDIA_URL }}'
#  STATIC_URL:   'https://{{ CREDENTIALS_BUCKET }}.{{ credentials_s3_domain }}{{ CREDENTIALS_STATIC_URL }}'
#
#  STATICFILES_STORAGE:  'credentials.apps.core.s3utils.StaticS3BotoStorage'
#  DEFAULT_FILE_STORAGE: 'credentials.apps.core.s3utils.MediaS3BotoStorage'

CREDENTIALS_FILE_STORAGE_BACKEND:
  MEDIA_ROOT: '{{ CREDENTIALS_MEDIA_ROOT }}'
  STATIC_ROOT: '{{ CREDENTIALS_STATIC_ROOT }}'
  MEDIA_URL: '{{ CREDENTIALS_MEDIA_URL }}'
  STATIC_URL: '{{ CREDENTIALS_STATIC_URL }}'
  STATICFILES_STORAGE: 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'
  DEFAULT_FILE_STORAGE: 'django.core.files.storage.FileSystemStorage'

CREDENTIALS_VERSION: "master"

CREDENTIALS_GUNICORN_EXTRA: ""

CREDENTIALS_EXTRA_APPS: []

CREDENTIALS_SERVICE_CONFIG:
  # Set credentials files storage backend
  FILE_STORAGE_BACKEND: '{{ CREDENTIALS_FILE_STORAGE_BACKEND }}'

  # credentials service user in programs service and lms
  CREDENTIALS_SERVICE_USER: '{{ CREDENTIALS_SERVICE_USER }}'

  # user api configuration
  USER_API_URL: '{{ CREDENTIALS_USER_API_URL }}'
  USER_JWT_AUDIENCE: '{{ CREDENTIALS_USER_API_JWT_AUDIENCE }}'
  USER_JWT_SECRET_KEY: '{{ CREDENTIALS_USER_API_JWT_SECRET_KEY }}'
