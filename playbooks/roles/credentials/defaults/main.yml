---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://github.com/edx/configuration/wiki
# code style: https://github.com/edx/configuration/wiki/Ansible-Coding-Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
##
# Defaults for role credentials
# 
CREDENTIALS_GIT_IDENTITY: !!null

# depends upon Newrelic being enabled via COMMON_ENABLE_NEWRELIC
# and a key being provided via NEWRELIC_LICENSE_KEY
CREDENTIALS_NEWRELIC_APPNAME: "{{ COMMON_ENVIRONMENT }}-{{ COMMON_DEPLOYMENT }}-{{ credentials_service_name }}"
CREDENTIALS_PIP_EXTRA_ARGS: "-i {{ COMMON_PYPI_MIRROR_URL }}"
CREDENTIALS_NGINX_PORT: 18150
CREDENTIALS_SSL_NGINX_PORT: 48150

CREDENTIALS_DEFAULT_DB_NAME: 'credentials'
CREDENTIALS_MYSQL_HOST: 'localhost'
# MySQL usernames are limited to 16 characters
CREDENTIALS_MYSQL_USER: 'credentials001'
CREDENTIALS_MYSQL_PASSWORD: 'password'

CREDENTIALS_DATABASES:
  # rw user
  default:
    ENGINE: 'django.db.backends.mysql'
    NAME: '{{ CREDENTIALS_DEFAULT_DB_NAME }}'
    USER: '{{ CREDENTIALS_MYSQL_USER }}'
    PASSWORD: '{{ CREDENTIALS_MYSQL_PASSWORD }}'
    HOST: '{{ CREDENTIALS_MYSQL_HOST }}'
    PORT: '3306'
    ATOMIC_REQUESTS: true
    CONN_MAX_AGE: 60

CREDENTIALS_DB_ADMIN_USER: 'root'
CREDENTIALS_DB_ADMIN_PASSWORD: ''
CREDENTIALS_MYSQL_MATCHER: '{{ CREDENTIALS_MYSQL_HOST }}'

CREDENTIALS_MEMCACHE: [ 'memcache' ]

CREDENTIALS_CACHES:
  default:
    BACKEND:  'django.core.cache.backends.memcached.MemcachedCache'
    KEY_PREFIX: 'default'
    LOCATION: '{{ CREDENTIALS_MEMCACHE }}'

CREDENTIALS_VERSION: "master"
CREDENTIALS_DJANGO_SETTINGS_MODULE: "credentials.settings.production"
CREDENTIALS_URL_ROOT: 'http://credentials:18150'
CREDENTIALS_OAUTH_URL_ROOT: 'http://127.0.0.1:8000'

CREDENTIALS_DATA_DIR: '{{ COMMON_DATA_DIR }}/{{ credentials_service_name }}'
CREDENTIALS_MEDIA_ROOT: '{{ CREDENTIALS_DATA_DIR }}/media'
CREDENTIALS_MEDIA_URL: '/media/'
CREDENTIALS_STATIC_ROOT: '{{ CREDENTIALS_DATA_DIR }}/staticfiles'
CREDENTIALS_STATIC_URL: '/static/'

CREDENTIALS_SECRET_KEY: 'Your secret key here'
CREDENTIALS_TIME_ZONE: 'UTC'
CREDENTIALS_LANGUAGE_CODE: 'en_US.UTF-8'

# Used to automatically configure OAuth2 Client
CREDENTIALS_SOCIAL_AUTH_EDX_OIDC_KEY : 'credentials-key'
CREDENTIALS_SOCIAL_AUTH_EDX_OIDC_SECRET : 'credentials-secret'
CREDENTIALS_SOCIAL_AUTH_REDIRECT_IS_HTTPS: false

CREDENTIALS_PLATFORM_NAME: 'Your Platform Name Here'

# credentials service user in programs service and lms
CREDENTIALS_SERVICE_USER: 'credentials_service_user'

# Absolute URL used to get programs from the programs service.
CREDENTIALS_PROGRAMS_API_URL: 'https://127.0.0.1:8004/api/v1/'
CREDENTIALS_PROGRAMS_API_JWT_AUDIENCE: 'programs-key'
CREDENTIALS_PROGRAMS_API_JWT_SECRET_KEY: 'programs-secret'

# Absolute URL used to get organization data from the organizations api in LMS
CREDENTIALS_ORGANIZATIONS_API_URL: 'https://127.0.0.1:8000/api/organizations/v0/'
CREDENTIALS_ORGANIZATIONS_API_AUDIENCE: 'lms-key'
CREDENTIALS_ORGANIZATIONS_API_SECRET_KEY: 'lms-secret'

# Absolute URL used to get user data from the user api in LMS
CREDENTIALS_USER_API_URL: 'https://127.0.0.1:8000/api/user/v1/'
CREDENTIALS_USER_API_JWT_AUDIENCE: 'lms-key'
CREDENTIALS_USER_API_JWT_SECRET_KEY: 'lms-secret'

# Example settings to use Amazon S3 as files storage backend with django storages:
# https://django-storages.readthedocs.org/en/latest/backends/amazon-S3.html#amazon-s3
#
# CREDENTIALS_FILE_STORAGE_BACKEND:
#  AWS_STORAGE_BUCKET_NAME: mybucket
#  AWS_CUSTOM_DOMAIN: mybucket.s3.amazonaws.com
#  AWS_ACCESS_KEY_ID: XXXAWS_ACCESS_KEYXXX
#  AWS_SECRET_ACCESS_KEY: XXXAWS_SECRETY_KEYXXX
#  AWS_QUERYSTRING_AUTH: False
#  AWS_QUERYSTRING_EXPIRE: False
#  AWS_DEFAULT_ACL: ''
#  AWS_HEADERS:
#    Cache-Control: max-age-31536000
#    Access-Control-Allow-Origin: PUT YOUR HOSTNAME HERE
#
#  COMPRESS_URL: 'https://mybucket.s3.amazonaws.com/'
#  STATIC_URL: 'https://mybucket.s3.amazonaws.com/'
#  COMPRESS_ROOT: {{ CREDENTIALS_STATIC_ROOT }}
#  COMPRESS_STORAGE: storages.backends.s3boto.S3BotoStorage
#  STATICFILES_STORAGE: storages.backends.s3boto.S3BotoStorage
#  DEFAULT_FILE_STORAGE: storages.backends.s3boto.S3BotoStorage

CREDENTIALS_FILE_STORAGE_BACKEND:
  DEFAULT_FILE_STORAGE: 'django.core.files.storage.DefaultStorage'

CREDENTIALS_SERVICE_CONFIG:
  SECRET_KEY: '{{ CREDENTIALS_SECRET_KEY }}'
  TIME_ZONE: '{{ CREDENTIALS_TIME_ZONE }}'
  LANGUAGE_CODE: '{{ CREDENTIALS_LANGUAGE_CODE }}'

  OAUTH2_PROVIDER_URL: '{{ CREDENTIALS_OAUTH_URL_ROOT }}/oauth2'
  SOCIAL_AUTH_EDX_OIDC_KEY: '{{ CREDENTIALS_SOCIAL_AUTH_EDX_OIDC_KEY }}'
  SOCIAL_AUTH_EDX_OIDC_SECRET: '{{ CREDENTIALS_SOCIAL_AUTH_EDX_OIDC_SECRET }}'
  SOCIAL_AUTH_EDX_OIDC_ID_TOKEN_DECRYPTION_KEY: '{{ CREDENTIALS_SOCIAL_AUTH_EDX_OIDC_SECRET }}'
  SOCIAL_AUTH_EDX_OIDC_URL_ROOT: '{{ CREDENTIALS_OAUTH_URL_ROOT }}/oauth2'
  SOCIAL_AUTH_REDIRECT_IS_HTTPS: '{{ CREDENTIALS_SOCIAL_AUTH_REDIRECT_IS_HTTPS }}'

  MEDIA_ROOT: '{{ CREDENTIALS_MEDIA_ROOT }}'
  MEDIA_URL: '{{ CREDENTIALS_MEDIA_URL }}'
  STATIC_ROOT: '{{ CREDENTIALS_STATIC_ROOT }}'
  STATIC_URL: '{{ CREDENTIALS_STATIC_URL }}'

  # db config
  DATABASE_OPTIONS:
    connect_timeout: 10
  DATABASES: '{{ CREDENTIALS_DATABASES }}'
  CACHES: '{{ CREDENTIALS_CACHES }}'

  PLATFORM_NAME: '{{ CREDENTIALS_PLATFORM_NAME }}'

  # Set credentials files storage backend
  FILE_STORAGE_BACKEND: '{{ CREDENTIALS_FILE_STORAGE_BACKEND }}'

  # credentials service user in programs service and lms
  CREDENTIALS_SERVICE_USER: '{{ CREDENTIALS_SERVICE_USER }}'

  # programs api configuration
  PROGRAMS_API_URL: '{{ CREDENTIALS_PROGRAMS_API_URL }}'
  PROGRAMS_JWT_AUDIENCE: '{{ CREDENTIALS_PROGRAMS_API_JWT_AUDIENCE }}'
  PROGRAMS_JWT_SECRET_KEY: '{{ CREDENTIALS_PROGRAMS_API_JWT_SECRET_KEY }}'

  # organizations api configuration
  ORGANIZATIONS_API_URL: '{{ CREDENTIALS_ORGANIZATIONS_API_URL }}'
  ORGANIZATIONS_AUDIENCE: '{{ CREDENTIALS_ORGANIZATIONS_API_AUDIENCE }}'
  ORGANIZATIONS_SECRET_KEY: '{{ CREDENTIALS_ORGANIZATIONS_API_SECRET_KEY }}'

  # user api configuration
  USER_API_URL: '{{ CREDENTIALS_USER_API_URL }}'
  USER_JWT_AUDIENCE: '{{ CREDENTIALS_USER_API_JWT_AUDIENCE }}'
  USER_JWT_SECRET_KEY: '{{ CREDENTIALS_USER_API_JWT_SECRET_KEY }}'


CREDENTIALS_REPOS:
  - PROTOCOL: "{{ COMMON_GIT_PROTOCOL }}"
    DOMAIN: "{{ COMMON_GIT_MIRROR }}"
    PATH: "{{ COMMON_GIT_PATH }}"
    REPO: credentials.git
    VERSION: "{{ CREDENTIALS_VERSION }}"
    DESTINATION: "{{ credentials_code_dir }}"
    SSH_KEY: "{{ CREDENTIALS_GIT_IDENTITY }}"


CREDENTIALS_GUNICORN_WORKERS: "2"
CREDENTIALS_GUNICORN_EXTRA: ""
CREDENTIALS_GUNICORN_EXTRA_CONF: ""
CREDENTIALS_GUNICORN_WORKER_CLASS: "gevent"

CREDENTIALS_HOSTNAME: '~^((stage|prod)-)?credentials.*'

NGINX_CREDENTIALS_GUNICORN_HOSTS:
  - 127.0.0.1

#
# vars are namespace with the module name.
#
credentials_role_name: credentials
credentials_venv_dir: "{{ credentials_home }}/venvs/{{ credentials_service_name }}"

credentials_migration_environment:
  DJANGO_SETTINGS_MODULE: "{{ CREDENTIALS_DJANGO_SETTINGS_MODULE }}"
  CREDENTIALS_CFG: "{{ COMMON_CFG_DIR }}/{{ credentials_service_name }}.yml"
  PATH: "{{ credentials_venv_dir }}/bin:{{ ansible_env.PATH }}"
  DB_MIGRATION_USER: "{{ COMMON_MYSQL_MIGRATE_USER }}"
  DB_MIGRATION_PASS: "{{ COMMON_MYSQL_MIGRATE_PASS }}"

credentials_service_name: "{{ credentials_role_name }}"
credentials_user: "{{ credentials_service_name }}"
credentials_home: "{{ COMMON_APP_DIR }}/{{ credentials_service_name }}"
credentials_code_dir: "{{ credentials_home }}/{{ credentials_service_name }}"

credentials_nodeenv_dir: "{{ credentials_home }}/nodeenvs/{{ credentials_service_name }}"
credentials_nodeenv_bin: "{{ credentials_nodeenv_dir }}/bin"
credentials_node_modules_dir: "{{ credentials_code_dir }}/node_modules"
credentials_node_bin: "{{ credentials_node_modules_dir }}/.bin"

credentials_environment:
  DJANGO_SETTINGS_MODULE: "{{ CREDENTIALS_DJANGO_SETTINGS_MODULE }}"
  CREDENTIALS_CFG: "{{ COMMON_CFG_DIR }}/{{ credentials_service_name }}.yml"
  PATH: "{{ credentials_venv_dir }}/bin:{{ ansible_env.PATH }}:{{ credentials_nodeenv_bin }}:{{ credentials_node_bin }}"

credentials_gunicorn_host: "127.0.0.1"
credentials_gunicorn_port: 8150
credentials_gunicorn_timeout: 300

credentials_log_dir: "{{ COMMON_LOG_DIR }}/{{ credentials_service_name }}"

#
# OS packages
#

credentials_debian_pkgs:
  - libmysqlclient-dev
  - libssl-dev
  # Needed to manipulate images.
  - libjpeg8-dev
  - libpng12-dev

credentials_redhat_pkgs: []
