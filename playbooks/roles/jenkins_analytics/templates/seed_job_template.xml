<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>
    Seed job autogenerated by ansible, it will be overriden.
  </description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.advancedqueue.AdvancedQueueSorterJobProperty plugin="PrioritySorter@2.9">
      <useJobPriority>false</useJobPriority>
      <priority>-1</priority>
    </jenkins.advancedqueue.AdvancedQueueSorterJobProperty>
    <hudson.model.ParametersDefinitionProperty>
        <parameterDefinitions>
            {% for param in job.parameters %}
            <hudson.plugins.global__variable__string__parameter.GlobalVariableStringParameterDefinition>
                <name>{{ param.name }}</name>
                <defaultValue>{{ param.value | default('') }}</defaultValue>
                <description>{{ param.description | default('') }}</description>
            </hudson.plugins.global__variable__string__parameter.GlobalVariableStringParameterDefinition>
            {% endfor %}
        </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>

  <scm class='org.jenkinsci.plugins.multiplescms.MultiSCM'>
    <scms>
      {% for scm in job.multiscm %}
      {% if scm.url is defined %}
      <scm class="hudson.plugins.git.GitSCM" plugin="git@2.4.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>{{ scm.url }}</url>
            {% if scm.credential_id is defined %}
            <credentialsId>{{ scm.credential_id }}</credentialsId>
            {% endif %}
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>{{ scm.branch }}</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        {% if scm.dest is defined %}
        <relativeTargetDir>{{ scm.dest }}</relativeTargetDir>
        {% endif %}
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <browser class="hudson.plugins.git.browser.AssemblaWeb">
          <url></url>
        </browser>
        <submoduleCfg class="list"/>
        <extensions/>
      </scm>
      {% endif %}
      {% endfor %}
    </scms>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    {% if job.dsl is defined %}
    <hudson.plugins.gradle.Gradle plugin="gradle@1.24">
      <description></description>
      <switches></switches>
      <tasks>clean libs test</tasks>
      <rootBuildScriptDir></rootBuildScriptDir>
      <buildFile></buildFile>
      <gradleName>(x)</gradleName>
      <useWrapper>true</useWrapper>
      <makeExecutable>false</makeExecutable>
      <fromRootBuildScriptDir>true</fromRootBuildScriptDir>
      <useWorkspaceAsHome>false</useWorkspaceAsHome>
    </hudson.plugins.gradle.Gradle>
    <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.43">
      <targets>{{ job.dsl.target_jobs }}</targets>
      <usingScriptText>false</usingScriptText>
      <ignoreExisting>false</ignoreExisting>
      <removedJobAction>{{ job.dsl.removed_job_action }}</removedJobAction>
      <removedViewAction>{{ job.dsl.removed_view_action }}</removedViewAction>
      <lookupStrategy>SEED_JOB</lookupStrategy>
      <additionalClasspath>{{ job.dsl.additional_classpath }}</additionalClasspath>
    </javaposse.jobdsl.plugin.ExecuteDslScripts>
    {% endif %}
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
