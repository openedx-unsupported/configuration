---

- name: install read-only ssh key
  copy: >
    content="{{ INSIGHTS_GIT_IDENTITY }}" dest={{ insights_git_identity_file }}
    owner={{ insights_user }} group={{ insights_user }} mode=0600

- name: setup the insights env file
  template: >
    src="edx/app/insights/insights_env.j2"
    dest="{{ insights_app_dir }}/insights_env"
    owner={{ insights_user }}
    group={{ insights_user }}
    mode=0644

- name: checkout code
  git: >
    dest={{ insights_code_dir }} repo={{ insights_source_repo }} version={{ INSIGHTS_VERSION }}
    accept_hostkey=yes
    ssh_opts="{{ insights_git_ssh_opts }}"
  register: insights_code_checkout
  notify: restart insights
  sudo_user: "{{ insights_user }}"

- name: write out app config file
  template: >
    src=edx/app/insights/insights.yaml.j2
    dest={{ COMMON_CFG_DIR  }}/{{ insights_service_name }}.yaml
    mode=0644 owner={{ insights_user }} group={{ insights_user }}
  notify: restart insights

- name: install application requirements
  pip: >
    requirements="{{ insights_requirements_base }}/{{ item }}"
    virtualenv="{{ insights_venv_dir }}" state=present
    extra_args="--exists-action w"
  sudo_user: "{{ insights_user }}"
  notify: restart insights
  with_items: insights_requirements

- name: create nodeenv
  shell: >
    creates={{ insights_nodeenv_dir }}
    {{ insights_venv_bin }}/nodeenv {{ insights_nodeenv_dir }}
  sudo_user: "{{ insights_user }}"

- name: install node dependencies
  npm: executable={{ insights_nodeenv_bin }}/npm path={{ insights_code_dir }} production=yes
  sudo_user: "{{ insights_user }}"

- name: install bower dependencies
  shell: >
    chdir={{ insights_code_dir }}
    . {{ insights_nodeenv_bin }}/activate && {{ insights_node_bin }}/bower install --production --config.interactive=false
  sudo_user: "{{ insights_user }}"

- name: migrate
  shell: >
    chdir={{ insights_code_dir }}
    DB_MIGRATION_USER={{ COMMON_MYSQL_MIGRATE_USER }}
    DB_MIGRATION_PASS={{ COMMON_MYSQL_MIGRATE_PASS }}
    {{ insights_venv_bin }}/python {{ insights_manage }} migrate --noinput
  sudo_user: "{{ insights_user }}"
  environment: "{{ insights_environment }}"
  when: migrate_db is defined and migrate_db|lower == "yes"

- name: run r.js optimizer
  shell: >
    chdir={{ insights_code_dir }}
    . {{ insights_nodeenv_bin }}/activate && {{ insights_node_bin }}/r.js -o build.js
  sudo_user: "{{ insights_user }}"

- name: run collectstatic
  shell: >
    chdir={{ insights_code_dir }}
    {{ insights_venv_bin }}/python {{ insights_manage }} {{ item }}
  sudo_user: "{{ insights_user }}"
  environment: "{{ insights_environment }}"
  with_items:
    - "collectstatic --noinput"
    - "compress"

- name: compile translations
  shell: >
    chdir={{ insights_code_dir }}
    . {{ insights_venv_bin }}/activate && i18n_tool generate -v
  sudo_user: "{{ insights_user }}"

- name: write out the supervisior wrapper
  template: >
    src=edx/app/insights/insights.sh.j2
    dest={{ insights_app_dir }}/{{ insights_service_name }}.sh
    mode=0650 owner={{ supervisor_user }} group={{ common_web_user }}
  notify: restart insights

- name: write supervisord config
  template: >
    src=edx/app/supervisor/conf.d.available/insights.conf.j2
    dest="{{ supervisor_available_dir }}/{{ insights_service_name }}.conf"
    owner={{ supervisor_user }} group={{ common_web_user }} mode=0644
  notify: restart insights

- name: enable supervisor script
  file: >
    src={{ supervisor_available_dir }}/{{ insights_service_name }}.conf
    dest={{ supervisor_cfg_dir }}/{{ insights_service_name }}.conf
    state=link
    force=yes
  notify: restart insights
  when: not disable_edx_services

- name: update supervisor configuration
  shell: "{{ supervisor_ctl }} -c {{ supervisor_cfg }} update"
  when: not disable_edx_services

- name: create symlinks from the venv bin dir
  file: >
    src="{{ insights_venv_bin }}/{{ item }}"
    dest="{{ COMMON_BIN_DIR }}/{{ item.split('.')[0] }}.{{ insights_role_name }}"
    state=link
  with_items:
  - python
  - pip
  - django-admin.py

- name: create manage.py symlink
  file: >
    src="{{ insights_manage }}"
    dest="{{ COMMON_BIN_DIR }}/manage.{{ insights_role_name }}"
    state=link

- name: remove read-only ssh key for the content repo
  file: path={{ insights_git_identity_file }} state=absent

- include: tag_ec2.yml tags=deploy
  when: COMMON_TAG_EC2_INSTANCE
