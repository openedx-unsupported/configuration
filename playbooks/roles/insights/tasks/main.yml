---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://openedx.atlassian.net/wiki/display/OpenOPS
# code style: https://openedx.atlassian.net/wiki/display/OpenOPS/Ansible+Code+Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
#
#
# Tasks for role insights
#
# Overview:
#
#
# Dependencies:
#
#
# Example play:
#
#

- name: setup the insights env file
  template:
    src: "edx/app/insights/insights_env.j2"
    dest: "{{ insights_app_dir }}/insights_env"
    owner: "{{ insights_user }}"
    group: "{{ insights_user }}"
    mode: 0644
  tags:
    - install
    - install:configuration

- name: install application requirements
  pip:
    requirements: "{{ insights_requirements_base }}/{{ item }}"
    virtualenv: "{{ insights_venv_dir }}"
    state: present
    extra_args: "--exists-action w"
    virtualenv_python: python3.5
  become_user: "{{ insights_user }}"
  with_items: "{{ insights_requirements }}"
  tags:
    - install
    - install:app-requirements

- name: create nodeenv
  shell: "{{ insights_venv_dir }}/bin/nodeenv {{ insights_nodeenv_dir }}  --node={{ insights_node_version }} --prebuilt --force"
  become_user: "{{ insights_user }}"
  tags:
    - install
    - install:system-requirements

# install with the shell command instead of the ansible npm module so we don't accidentally re-write package.json
- name: install node dependencies
  shell: "{{ insights_nodeenv_bin }}/npm install"
  args:
    chdir: "{{ insights_code_dir }}"
  become_user: "{{ insights_user }}"
  environment: "{{ insights_environment }}"
  tags:
    - install
    - install:app-requirements

- name: migrate
  shell: "DB_MIGRATION_USER='{{ COMMON_MYSQL_MIGRATE_USER }}' DB_MIGRATION_PASS='{{ COMMON_MYSQL_MIGRATE_PASS }}' {{ insights_venv_dir }}/bin/python {{ insights_manage }} migrate --noinput"
  args:
    chdir: "{{ insights_code_dir }}"
  become_user: "{{ insights_user }}"
  environment: "{{ insights_environment }}"
  when: migrate_db is defined and migrate_db|lower == "yes"
  run_once: yes
  tags:
    - migrate
    - migrate:db

- name: run webpack
  shell: ". {{ insights_nodeenv_bin }}/activate && {{ insights_node_bin }}/webpack --config webpack.prod.config.js"
  args:
    chdir: "{{ insights_code_dir }}"
  become_user: "{{ insights_user }}"
  environment: "{{ insights_environment }}"
  tags:
    - assets
    - assets:gather

- name: run collectstatic
  shell: "{{ insights_venv_dir }}/bin/python {{ insights_manage }} {{ item }}"
  args:
    chdir: "{{ insights_code_dir }}"
  become_user: "{{ insights_user }}"
  environment: "{{ insights_environment }}"
  with_items:
    - "collectstatic --noinput"
  tags:
    - assets
    - assets:gather

- name: write out the supervisior wrapper
  template:
    src: "edx/app/insights/insights.sh.j2"
    dest: "{{ insights_app_dir }}/{{ insights_service_name }}.sh"
    mode: 0650
    owner: "{{ supervisor_user }}"
    group: "{{ common_web_user }}"
  tags:
    - install
    - install:configuration

- name: write supervisord config
  template:
    src: edx/app/supervisor/conf.d.available/insights.conf.j2
    dest: "{{ supervisor_available_dir }}/{{ insights_service_name }}.conf"
    owner: "{{ supervisor_user }}"
    group: "{{ common_web_user }}"
    mode: 0644
  tags:
    - install
    - install:configuration

- name: enable supervisor script
  file:
    src: "{{ supervisor_available_dir }}/{{ insights_service_name }}.conf"
    dest: "{{ supervisor_cfg_dir }}/{{ insights_service_name }}.conf"
    state: link
    force: yes
  when: not disable_edx_services
  tags:
    - install
    - install:configuration

- name: update supervisor configuration
  shell: "{{ supervisor_ctl }} -c {{ supervisor_cfg }} update"
  when: not disable_edx_services
  tags:
    - manage
    - manage:start

- name: create symlinks from the venv bin dir
  file:
    src: "{{ insights_venv_dir }}/bin/{{ item }}"
    dest: "{{ COMMON_BIN_DIR }}/{{ item.split('.')[0] }}.{{ insights_service_name }}"
    state: link
  with_items:
  - python
  - pip
  - django-admin.py
  tags:
    - install
    - install:base

- name: create manage.py symlink
  file:
    src: "{{ insights_manage }}"
    dest: "{{ COMMON_BIN_DIR }}/manage.{{ insights_service_name }}"
    state: link
  tags:
    - install
    - install:base

- name: restart insights
  supervisorctl:
    state: restarted
    supervisorctl_path: "{{ supervisor_ctl }}"
    config: "{{ supervisor_cfg }}"
    name: "{{ insights_service_name }}"
  when: not disable_edx_services
  become_user: "{{ supervisor_service_user }}"
  tags:
    - manage:start
