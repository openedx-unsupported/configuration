---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://openedx.atlassian.net/wiki/display/OpenOPS
# code style: https://openedx.atlassian.net/wiki/display/OpenOPS/Ansible+Code+Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
#
# Tasks for role edx-notes-api
# 
# Overview:
#
# Role for installing the edx-notes-api Django application, https://github.com/edx/edx-notes-api.
#
# Dependencies:
#
# For a complete picture of dependencies, see:
#
#  configuration/playbooks/role/edx-notes-api/meta/main.yml
#  configuration/playbooks/edx-east/notes.yml
#
# Example play:
#
# - name: Deploy edX Notes API
# hosts: all
# become: True
# gather_facts: True
# vars:
#   ENABLE_DATADOG: False
#   ENABLE_SPLUNKFORWARDER: False
#   ENABLE_NEWRELIC: True
# roles:
#   - role: nginx
#     nginx_sites:
#       - edx-notes-api
#   - aws
#   - edx-notes-api 
#   - role: datadog
#     when: COMMON_ENABLE_DATADOG
#   - role: splunkforwarder
#     when: COMMON_ENABLE_SPLUNKFORWARDER
#   - role: newrelic
#     when: COMMON_ENABLE_NEWRELIC

- name: Install application requirements
  pip:
    requirements: "{{ edx_notes_api_requirements_base }}/{{ item }}"
    virtualenv: "{{ edx_notes_api_home }}/venvs/{{ edx_notes_api_service_name }}"
    state: present
    extra_args: "--exists-action w"
  become_user: "{{ edx_notes_api_user }}"
  with_items: "{{ edx_notes_api_requirements }}"

- name: Migrate
  shell: >
    DB_MIGRATION_USER='{{ COMMON_MYSQL_MIGRATE_USER }}'
    DB_MIGRATION_PASS='{{ COMMON_MYSQL_MIGRATE_PASS }}'
    {{ edx_notes_api_home }}/venvs/{{ edx_notes_api_service_name }}/bin/python {{ edx_notes_api_manage }} migrate --noinput --settings="notesserver.settings.yaml_config"
  args:
    chdir: "{{ edx_notes_api_code_dir }}"
  become_user: "{{ edx_notes_api_user }}"
  environment:
    EDXNOTES_CONFIG_ROOT: "{{ COMMON_CFG_DIR }}"
  when: migrate_db is defined and migrate_db|lower == "yes"

- name: Write out gunicorn.py
  template:
    src: "edx/app/edx_notes_api/edx_notes_api_gunicorn.py.j2"
    dest: "{{ edx_notes_api_home }}/{{ edx_notes_api_service_name }}_gunicorn.py"
    owner: "{{ supervisor_user }}"
    group: "{{ common_web_user }}"
    mode: "0650"
  tags:
    - deploy

- name: Write out the supervisor wrapper
  template:
    src: "edx/app/edx_notes_api/edx_notes_api.sh.j2"
    dest: "{{ edx_notes_api_home }}/{{ edx_notes_api_service_name }}.sh"
    mode: "0650"
    owner: "{{ supervisor_user }}"
    group: "{{ common_web_user }}"
  tags:
    - install
    - install:configuration


- name: Write supervisord config
  template:
    src: "edx/app/supervisor/conf.d.available/edx_notes_api.conf.j2"
    dest: "{{ supervisor_available_dir }}/{{ edx_notes_api_service_name }}.conf"
    owner: "{{ supervisor_user }}"
    group: "{{ common_web_user }}"
    mode: "0644"
  tags:
    - deploy

- name: Setup the edx_notes_api env file
  template:
    src: "edx/app/edx_notes_api/edx_notes_api_env.j2"
    dest: "{{ edx_notes_api_home }}/{{ edx_notes_api_service_name}}_env"
    owner: "{{ edx_notes_api_user }}"
    group: "{{ edx_notes_api_user }}"
    mode: "0644"
  tags:
    - install
    - install:configuration


- name: Enable supervisor script
  file:
    src: "{{ supervisor_available_dir }}/{{ edx_notes_api_service_name }}.conf"
    dest: "{{ supervisor_cfg_dir }}/{{ edx_notes_api_service_name }}.conf"
    state: link
    force: yes
  when: not disable_edx_services
  tags:
    - deploy

- name: Update supervisor configuration
  shell: "{{ supervisor_ctl }} -c {{ supervisor_cfg }} update"
  when: not disable_edx_services
  tags:
    - deploy

- name: Restart supervisor
  supervisorctl:
    name: "{{ edx_notes_api_service_name }}"
    supervisorctl_path: "{{ supervisor_ctl }}"
    config: "{{ supervisor_cfg }}"
    state: restarted
  when: not disable_edx_services
  tags:
    - deploy

- name: Create symlinks from the venv bin dir
  file:
    src: "{{ edx_notes_api_home }}/venvs/{{ edx_notes_api_service_name }}/bin/{{ item }}"
    dest: "{{ COMMON_BIN_DIR }}/{{ item.split('.', 1) | first }}.{{ edx_notes_api_service_name }}"
    state: link
  with_items:
    - python
    - pip
    - django-admin.py

- name: Create manage.py symlink
  file:
    src: "{{ edx_notes_api_manage }}"
    dest: "{{ COMMON_BIN_DIR }}/manage.{{ edx_notes_api_service_name }}"
    state: link

- name: Restart edx_notes_api
  supervisorctl:
    name: "{{ edx_notes_api_service_name }}"
    supervisorctl_path: "{{ supervisor_ctl }}"
    config: "{{ supervisor_cfg }}"
    state: restarted
  when: not disable_edx_services
  become_user: "{{ supervisor_service_user }}"
