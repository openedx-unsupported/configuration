# Install docker-engine and docker-compose
# Add users to docker group
---
- name: add docker group
  group:
    name: "{{ docker_group }}"
  tags:
    - install
    - install:base

- name: add users to docker group
  user:
    name: "{{ item }}"
    groups: "{{ docker_group }}"
    append: yes
  with_items: "{{ docker_users }}"
  tags:
    - install
    - install:base

- name: install package dependencies
  apt:
    name: "{{ docker_tools_deps_deb_pkgs }}"
    update_cache: yes
    cache_valid_time: "{{ cache_valid_time }}"
  tags:
    - install
    - install:system-requirements
  when: ansible_distribution_release != 'focal'

- name: Docker repo Ubuntu Focal
  when: ansible_distribution_release == 'focal'
  block:
  - name: add docker apt key Ubuntu Focal
    apt_key:
      url: "{{ docker_apt_key_url }}"
    tags:
      - install
      - install:configuration

  - name: add docker repo Ubuntu Focal
    ansible.builtin.apt_repository:
      repo: "{{ item }}"
      filename: 'docker'
    with_items: "{{ docker_repos }}"
    tags:
      - install
      - install:configuration

- name: Docker repo post Ubuntu Focal
  when: ansible_distribution_release != 'focal'
  block:
  - name: download docker repo key post Ubuntu Focal
    ansible.builtin.get_url:
      url: "{{ docker_apt_key_url }}"
      dest: /etc/apt/keyrings/docker.asc

# Apt can handle armored .asc files, but the offical docker instructions tell people to dearmor the key.
# If we try to use the asc file on a box with docker already installed ansible will create a duplicate
# entry and apt will complain with the error "Conflicting values set for option Signed-By..."
  - name: Dearmor docker repo gpg key post Ubuntu Focal
    ansible.builtin.shell:
      cmd: 'gpg --dearmor < /etc/apt/keyrings/docker.asc > /etc/apt/keyrings/docker.gpg'

  - name: add docker repo post Ubuntu Focal
    apt_repository:
      repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
      filename: 'docker'
    tags:
      - install
      - install:configuration

- name: install docker-engine
  apt:
    name: "docker-ce"
    update_cache: yes
  tags:
    - install
    - install:system-requirements

- name: Are we in a Docker container
  shell: echo $(egrep -q 'docker' /proc/self/cgroup && echo 'yes' || echo 'no')
  ignore_errors: yes
  register: docker_container
  tags:
    - install
    - install:base

- name: start docker service
  service:
    name: docker
    enabled: yes
    state: started
  when: docker_container.stdout != 'yes'
  tags:
    - install
    - install:configuration

- name: install docker-compose
  get_url:
    dest: /usr/local/bin/docker-compose
    url: "{{ docker_compose_pkg_url }}"
    mode: 0755
  tags:
    - install
    - install:system-requirements
