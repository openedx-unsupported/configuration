---
# Test that the Android sdk has been installed to the correct location
- name: Verify Android SDK is installed
  shell: "stat {{ android_home }}/tools/android"
  register: android_version
- assert:
    that:
      - "android_version.rc == 0"
# Test that the necessary build targets for building the edx app have
# been installed.
- name: Verify correct Android build targets installed
  shell: "{{ android_home }}/tools/android list target |tr '\n' ' '"
  register: build_targets
- with_items: "{{ android_build_targets }}"
  assert:
    that:
      - "'{{ item }}' in build_targets.stdout"
# Put the paths of downloaded packages into a list, so they can be iterated over
# in an assert block
- name: Gather paths of installed Android packages into a list
  util_map:
    function: 'zip_to_list'
    input: "{{ android_tools }}"
    args:
      - "android_test_path"
  register: android_test_paths
# Test that the correct android tools are installed
- name: Verify build tools installed
  stat: path={{ android_home }}/{{ item }}
  register: android_package_stats
  # When this task is skipped, ansible still tries to resolve the variable
  # returned from zip_to_list, but cannot. Add a default value to avoid these
  # failures when other tasks are run, but not mask true failures when this
  # task is run.
  with_items: "{{ android_test_paths.function_output | default(['non-existent-package']) }}"
- with_items: "{{ android_package_stats.results }}"
  assert:
    that:
      - "item.stat.exists == True"
