# variables common to the lms role, automatically loaded
# when the role is included
---

# install dir for the edx-platform repo
edx_platform_code_dir: "{{ app_base_dir }}/edx-platform"

# Default nginx listen ports
# These should be overrided if you want
# to serve all content on port 80


lms_xml_nginx_port: 18030
lms_nginx_port: 80
lms_preview_nginx_port: 18020
cms_nginx_port: 18010

# These vars are for creating the application json config
# files.  There are two for each service that uses the
# 'edx-platform' code.  Defining them will create the upstart
# job and nginx configuration for the corresponding service.
# It will also enable the corresponding section in the 
# 'edxapp' upstart job.

service_variants_enabled: 
  - lms
  - lms-xml
  - cms
  - lms-preview

lms_auth_config: {}
lms_env_config: {}
lms_preview_auth_config: {}
lms_preview_env_config: {}
cms_auth_config: {}
cms_env_config: {}
lms_xml_auth_config: {}
lms_xml_env_config: {}

#Number of gunicorn worker processes to spawn, as a multipler to number of virtual cores
worker_core_mult:
  lms: 4
  lms_preview: 2
  lms_xml: 2
  cms: 2

#Theming
#To turn off theming, specify edxapp_theme_name: ''
#Stanford, for example, uses edxapp_theme_name: 'stanford'
edxapp_theme_name: ''
edxapp_theme_source_repo: 'git://github.com/Stanford-Online/edx-theme.git'
edxapp_theme_version: 'HEAD'

# make this the public URL instead of writable
lms_source_repo: git://github.com/edx/edx-platform.git
lms_version: 'HEAD'
local_requirements_file:  "{{ edx_platform_code_dir }}/requirements/edx/local.txt"
pre_requirements_file:    "{{ edx_platform_code_dir }}/requirements/edx/pre.txt"
post_requirements_file:   "{{ edx_platform_code_dir }}/requirements/edx/post.txt"
base_requirements_file:   "{{ edx_platform_code_dir }}/requirements/edx/base.txt"
github_requirements_file: "{{ edx_platform_code_dir }}/requirements/edx/github.txt"
repo_requirements_file:   "{{ edx_platform_code_dir }}/requirements/edx/repo.txt"

lms_debian_pkgs:
  - apparmor-utils
  - aspell
  - build-essential
  - curl
  - dvipng
  - fabric
  - facter
  - g++
  - gcc
  - gfortran
  - ghostscript
  - git
  - github-cli
  - graphviz
  - graphviz-dev
  - gunicorn
  - inoticoming
  - ipython
  - libcrypt-ssleay-perl
  - libcurl4-openssl-dev
  - libdigest-sha-perl
  - libfreetype6-dev
  - libgeos-dev
  - libgraphviz-dev
  - libjpeg8-dev
  - liblapack-dev
  - liblwp-protocol-https-perl
  - libmysqlclient-dev
  - libnet-amazon-ec2-perl
  - libpng12-dev
  - libreadline-dev
  - libreadline6-dev
  - libssl-dev
  - libswitch-perl
  - libwww-perl
  - libxml++2.6-dev
  - libxml2-dev
  - libxml2-utils
  - libxslt1-dev
  - maven2
  - mongodb
  - mongodb-clients
  - mysql-client
  - npm
  - ntp
  - openjdk-7-jdk
  - openjdk-7-jre
  - pep8
  - perl
  - pkg-config
  - postfix
  - pylint
  - python-boto
  - python-coverage-test-runner
  - python-django-nose
  - python-jenkins
  - python-nose
  - python-nosexcover
  - python-numpy
  - python-pip
  - python-scipy
  - rake
  - reprepro
  - rsyslog
  - rubygems
  - sqlite3
  - super
  - vagrant
  - yui-compressor
  - zip
  - zlib1g-dev

# Ruby Specific Vars
ruby_base: /opt/www
rbenv_root: "{{ ruby_base }}/.rbenv"
ruby_version: "1.9.3-p374"
gem_home: "{{ ruby_base }}/.gem"

# Deploy Specific Vars
lms_variant: lms
cms_variant: cms

deploy_environment:
  LANG: "en_US.UTF-8"
  NO_PREREQ_INSTALL: 1
  SKIP_WS_MIGRATIONS: 1
  RBENV_ROOT: "{{ rbenv_root }}"
  GEM_HOME: "{{ gem_home }}"
  PATH: "{{ venv_dir }}/bin:{{ edx_platform_code_dir }}/bin:{{ rbenv_root }}/bin:{{ rbenv_root }}/shims:{{ gem_home }}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games"
