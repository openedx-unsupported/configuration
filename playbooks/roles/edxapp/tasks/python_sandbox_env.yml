# Set the alternatives this way for blas and lapack to work correctly for the 
# MITx 6.341x course.
# TODO: Switch to using alternatives module in 1.6
- name: code sandbox | Use libblas for 3gf
  command: update-alternatives --set libblas.so.3gf /usr/lib/libblas/libblas.so.3gf

# TODO: Switch to using alternatives module in 1.6
- name: code sandbox | Use liblapac for 3gf
  command: update-alternatives --set liblapack.so.3gf /usr/lib/lapack/liblapack.so.3gf

- name: code sandbox | Create edxapp sandbox user
  user: name={{ edxapp_sandbox_user }} shell=/bin/false home={{ edxapp_sandbox_venv_dir }}
  tags:
  - edxapp-sandbox

- name: code sandbox | Install apparmor utils system pkg
  apt: pkg=apparmor-utils state=present
  tags:
  - edxapp-sandbox

- name: code sandbox | write out apparmor code sandbox config
  template: src=code.sandbox.j2 dest=/etc/apparmor.d/code.sandbox mode=0644 owner=root group=root
  tags:
  - edxapp-sandbox

- name: code sandbox | write out sandbox user sudoers config
  template: src=95-sandbox-sudoer.j2 dest=/etc/sudoers.d/95-{{ edxapp_sandbox_user }} mode=0440 owner=root group=root validate='visudo -c -f %s'
  tags:
  - edxapp-sandbox

# we boostrap and enable the apparmor service here.  in deploy.yml we disable, deploy, then re-enable
# so we need to enable it in main.yml
- name: code sandbox | start apparmor service
  service: name=apparmor state=started
  tags:
  - edxapp-sandbox

- name: code sandbox | (bootstrap) load code sandbox profile
  command: apparmor_parser -r /etc/apparmor.d/code.sandbox
  tags:
  - edxapp-sandbox

- name: code sandbox | (bootstrap) put code sandbox into aa-enforce or aa-complain mode depending on EDXAPP_SANDBOX_ENFORCE
  command: /usr/sbin/{{ edxapp_aa_command }} /etc/apparmor.d/code.sandbox
  tags:
  - edxapp-sandbox
