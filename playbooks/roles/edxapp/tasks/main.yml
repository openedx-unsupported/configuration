# requires:
#  - group_vars/all
#  - common/tasks/main.yml
#  - nginx/tasks/main.yml
---
- name: Change permissions on datadir
  file: path={{ app_base_dir }}/data state=directory owner=www-data group=www-data
  tags:
  - cms
  - lms
  - lms-env
  - update

- name: Change owner on staticfiles
  file: path={{ app_base_dir }}/staticfiles state=directory owner=www-data group=adm
  tags:
  - cms
  - lms
  - lms-env
  - update


- name: Create lms log target directory
  file: path={{log_base_dir}}/lms state=directory owner=syslog group=adm mode=2770
  tags:
  - lms
  - lms-env
  - logging
  - update

# If we set up LMS, we have to set up edx logging
- include: ../../common/tasks/edx_logging_base.yml

# Install ssh keys for ubuntu account to be able to check out from edx-platform
# Temprory behavior, not needed after June 1. Perhaps still useful as a recipe.
# {{ secure_dir }} is relative to the top-level playbooks dir so there is some
# ugly relative pathing here

- name: install read-only ssh key for edx-platform repo (private)
  copy: src=../../../{{ secure_dir }}/files/git-identity dest=/etc/git-identity force=yes owner=ubuntu group=adm mode=600
  tags:
  - lms
  - cms
  - update

- name: upload ssh script
  copy: src=git_ssh.sh dest=/tmp/git_ssh.sh force=yes owner=root group=adm mode=750
  tags:
  - lms
  - cms
  - update

# Check out edx-platform repo to $app_base_dir
- name: install git and its recommends
  apt: pkg=git state=present install_recommends=yes 
  tags:
  - lms
  - cms

- name: git checkout edx-platform repo into $app_base_dir
  git: dest={{platform_code_dir}} repo={{lms_source_repo}} version={{lms_version}}
  environment:
    GIT_SSH: /tmp/git_ssh.sh
  tags:
  - lms
  - cms
  - install
  
- name: sets permissions on platform code dir
  file: path={{platform_code_dir}} state=directory owner=www-data group=www-data mode=755
  tags:
  - lms
  - cms
  - install

- name: install a bunch of system packages on which LMS and CMS rely
  apt: pkg={{item}} state=present
  with_items: lms_debian_pkgs
  tags:
  - lms
  - cms
  - install


# Install the python pre-requirements into {{ venv_dir }}
- name : install pre-requirements
  pip: requirements="{{pre_requirements_file}}" virtualenv="{{venv_dir}}" state=present
  tags:
  - lms
  - cms
  - install


# Install the python modules into {{ venv_dir }}
- name : install base python packages using the shell
  # Need to use shell rather than pip so that we can maintain the context of our current working directory; some 
  # requirements are pathed relative to the edx-platform repo. Using the pip from inside the virtual environment implicitly
  # installs everything into that virtual environment.
  shell: cd {{ platform_code_dir }} && {{ venv_dir }}/bin/pip install --use-mirrors -r {{ base_requirements_file }}
  tags:
  - lms
  - cms
  - install
  
 
# Install the python post requirements into {{ venv_dir }}
- name : install python post-requirements
  pip: requirements="{{post_requirements_file}}" virtualenv="{{venv_dir}}" state=present
  tags:
  - lms
  - cms
  - install

# Install the final python modules into {{ venv_dir }}
- name : install python post-post requirements using the shell
  # Need to use shell rather than pip so that we can maintain the context of our current working directory; some 
  # requirements are pathed relative to the edx-platform repo. Using the pip from inside the virtual environment implicitly
  # installs everything into that virtual environment.
  shell: cd {{ platform_code_dir }} && {{ venv_dir }}/bin/pip install --use-mirrors -r {{ item }}
  with_items:
  - "{{ repo_requirements_file }}"
  - "{{ github_requirements_file }}"
  - "{{ local_requirements_file }}"
  tags:
  - lms
  - cms
  - install

- include: lms.yml
  when: "'lms' in service_variants_enabled"
- include: lms-xml.yml
  when: "'lms-xml' in service_variants_enabled"
- include: cms.yml
  when: "'cms' in service_variants_enabled"
- include: lms-preview.yml
  when: "'lms-preview' in service_variants_enabled"
 
