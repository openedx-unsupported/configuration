- name: xserver | stop xserver
  service: name=xserver state=stopped
  tags:
  - deploy

- name: xserver | checkout code
  git: dest={{xserver_code_dir}} repo={{xserver_source_repo}} version={{xserver_version}}
  sudo_user: "{{ xserver_user }}"
  tags:
  - deploy

- name: xserver | install requirements
  pip: requirements="{{xserver_requirements_file}}" virtualenv="{{ xserver_venv_dir }}" state=present
  sudo_user: "{{ xserver_user }}"
  tags:
  - deploy

- name: xserver | install sandbox requirements
  pip: requirements="{{xserver_requirements_file}}" virtualenv="{{xserver_venv_sandbox_dir}}" state=present
  sudo_user: "{{ xserver_user }}"
  tags:
  - deploy

- name: xserver | create xserver application config
  template: src=xserver.env.json.j2 dest={{ xserver_app_dir }}/env.json
  sudo_user: "{{ xserver_user }}"
  tags:
  - deploy

- name: xserver | install read-only ssh key for the content repo that is required for grading
  copy: src={{ item }} dest=/etc/git-identity force=yes owner=ubuntu group=adm mode=60
  first_available_file:
    - "{{ secure_dir }}/files/git-identity"
    - "git-identity-example"
  tags:
  - deploy

- name: xserver | checkout grader code
  git: dest={{ XSERVER_GRADER_DIR }} repo={{ XSERVER_GRADER_SOURCE }} version={{ xserver_grader_version }}
  environment:
    GIT_SSH: /tmp/git_ssh.sh
  sudo_user: "{{ xserver_user }}"
  tags:
  - deploy

- name: xserver | remove read-only ssh key for the content repo
  file: path=/etc/git-identity state=absent
  tags:
  - deploy

- name: xserver | start xserver
  service: name=xserver state=started
  tags:
  - deploy
