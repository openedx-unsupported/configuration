---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://openedx.atlassian.net/wiki/display/OpenOPS
# code style: https://openedx.atlassian.net/wiki/display/OpenOPS/Ansible+Code+Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
#
#
# Tasks for role git_clone
#
# Overview:
#
# This role performs the repetitive tasks that most edX roles
# require in our default configuration.
#
#
# Rewrite this task using the ansible git-config module once we'll migrate to Ansible 2.x
# https://docs.ansible.com/ansible/git_config_module.html#git-config
#
- name: Set git fetch.prune to ignore deleted remote refs
  shell: git config --global fetch.prune true
  become_user: "{{ repo_owner }}"
  when: repo_owner is defined
  tags:
    - install
    - install:code

- name: Validate git protocol
  fail:
    msg: '{{ GIT_REPOS.PROTOCOL }} must be "https" or "ssh"'
  when: (item.PROTOCOL != "https") and (item.PROTOCOL != "ssh") and GIT_REPOS is defined
  with_items: "{{ GIT_REPOS }}"
  no_log: true
  tags:
    - install
    - install:code


- name: Install read-only ssh key
  copy:
    dest: "{{ git_home }}/.ssh/{{ item.REPO }}"
    content: "{{ item.SSH_KEY }}"
    owner: "{{ repo_owner }}"
    group: "{{ repo_group }}"
    mode: "0600"
  when: item.PROTOCOL == "ssh" and GIT_REPOS is defined
  with_items: "{{ GIT_REPOS }}"
  no_log: true
  tags:
    - install
    - install:code

- name: Checkout code over ssh
  git_2_0_1:
    repo: "git@{{ item.DOMAIN }}:{{ item.PATH }}/{{ item.REPO }}"
    dest: "{{ item.DESTINATION }}"
    version: "{{ item.VERSION }}"
    accept_hostkey: yes
    key_file: "{{ git_home }}/.ssh/{{ item.REPO }}"
  become_user: "{{ repo_owner }}"
  register: code_checkout
  when: item.PROTOCOL == "ssh" and GIT_REPOS is defined
  with_items: "{{ GIT_REPOS }}"
  no_log: true
  tags:
    - install
    - install:code

- name: Checkout code over https
  git_2_0_1:
    repo: "https://{{ item.DOMAIN }}/{{ item.PATH }}/{{ item.REPO }}"
    dest: "{{ item.DESTINATION }}"
    version: "{{ item.VERSION }}"
  become_user: "{{ repo_owner }}"
  register: code_checkout
  when: item.PROTOCOL == "https" and GIT_REPOS is defined
  with_items: "{{ GIT_REPOS }}"
  no_log: true
  tags:
    - install
    - install:code

- name: Remove read-only ssh key
  file:
    dest: "{{ git_home }}/.ssh/{{ item.REPO }}"
    state: absent
  when: item.PROTOCOL == "ssh" and GIT_REPOS is defined
  with_items: "{{ GIT_REPOS }}"
  no_log: true
  tags:
    - install
    - install:code
