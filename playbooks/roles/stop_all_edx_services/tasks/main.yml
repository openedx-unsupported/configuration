---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://openedx.atlassian.net/wiki/display/OpenOPS
# code style: https://openedx.atlassian.net/wiki/display/OpenOPS/Ansible+Code+Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
#
#
# Tasks for role stop_all_edx_services
#
# Overview:
#
#   This stops all services on an edX server
#   so that everything is shutdown prior to creating
#   an AMI.
#
# Example play:
#     roles:
#       - stop_all_edx_services
#
#

# Hermes is not used everywhere, try to stop it if it is running.
# We ignore errors here because of the various states the process
# and machine could be in and because we do not install Hermes
# on everything.
- name: stop Hermes if it exists
  service:
    name: "hermes"
    state: stopped
  ignore_errors: yes

- name: supervisorctl stop all
  stat:
    path: /etc/init/supervisor.conf
  register: stat_out
  changed_when: stat_out is defined and stat_out.stat.exists
  notify:
    - supervisorctl_stop_all

- name: supervisorctl stop all systemd
  stat:
    path: /etc/systemd/system/supervisor.service
  register: stat_out
  changed_when: stat_out is defined and stat_out.stat.exists
  notify:
    - supervisorctl_stop_all

- name: Get supervisorctl output
  shell: "/edx/bin/supervisorctl status"
  register: supervisorctl_command_result
  ignore_errors: True

- name: Stop supervisor
  stat:
    path: /etc/init/supervisor.conf
  register: stat_out
  changed_when: stat_out is defined and stat_out.stat.exists and 'RUNNING' not in supervisorctl_command_result.stdout
  notify:
    - stop supervisor

- name: Stop supervisor systemd
  stat:
    path: /etc/systemd/system/supervisor.service
  register: stat_out
  changed_when: stat_out is defined and stat_out.stat.exists and 'RUNNING' not in supervisorctl_command_result.stdout
  notify:
    - stop supervisor

- name: Stop nginx
  stat:
    path: /etc/init.d/nginx
  register: stat_out
  changed_when: stat_out is defined and stat_out.stat.exists
  notify:
    - stop nginx

- name: Stop rabbitmq-server
  stat:
    path: /etc/init.d/rabbitmq-server
  register: stat_out
  changed_when: stat_out is defined and stat_out.stat.exists
  notify:
    - stop rabbitmq-server

- name: Stop memcached
  stat:
    path: /etc/init.d/memcached
  register: stat_out
  changed_when: stat_out is defined and stat_out.stat.exists
  notify:
    - stop memcached

- name: Stop mongodb
  stat:
    path: /etc/init.d/mongodb
  register: stat_out
  changed_when: stat_out is defined and stat_out.stat.exists
  notify:
    - stop mongodb

- shell: "true"
  notify: kill processes by user
