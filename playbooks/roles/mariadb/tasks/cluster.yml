- name: copy galera cluster config
  template:
    src: "etc/mysql/conf.d/galera.cnf.j2"
    dest: "/etc/mysql/conf.d/galera.cnf"
    owner: "root"
    group: "root"
    mode: 0600

- name: check if we have already bootstrapped the cluster
  stat: path=/etc/mysql/ansible_cluster_started
  register: mariadb_bootstrap

- name: stop mysql for cluster bootstrap
  service: name=mysql state=stopped
  when: not mariadb_bootstrap.stat.exists

- name: setup bootstrap on primary
  lineinfile:
    dest: "/etc/mysql/conf.d/galera.cnf"
    regexp: "^wsrep_cluster_address=gcomm://{{ hostvars.keys()|sort|join(',') }}$"
    line: "wsrep_cluster_address=gcomm://"
  when: ansible_hostname == hostvars[hostvars.keys()[0]].ansible_hostname and not mariadb_bootstrap.stat.exists

- name: fetch debian.cnf file so start-stop will work properly
  fetch:
    src: /etc/mysql/debian.cnf
    dest: /tmp/debian.cnf
    fail_on_missing: yes
    flat: yes
  when: ansible_hostname == hostvars[hostvars.keys()[0]].ansible_hostname and not mariadb_bootstrap.stat.exists
  register: mariadb_new_debian_cnf

- name: copy fetched file to other cluster members
  copy: src=/tmp/debian.cnf dest=/etc/mysql/debian.cnf
  when: mariadb_new_debian_cnf is defined  

- name: start everything
  service: name=mysql state=started
  when: not mariadb_bootstrap.stat.exists

- name: reset galera cluster config since we are bootstrapped
  template:
    src: "etc/mysql/conf.d/galera.cnf.j2"
    dest: "/etc/mysql/conf.d/galera.cnf"
    owner: "root"
    group: "root"
    mode: 0600
  when: not mariadb_bootstrap.stat.exists

- name: touch bootstrap file to confirm we are fully up
  file: path="/etc/mysql/ansible_cluster_started" state=touch

# This is needed for mysql-check in haproxy or other mysql monitor
# scripts to prevent haproxy checks exceeding `max_connect_errors`.
- name: create haproxy monitor user
  command: "mysql -e \"INSERT INTO mysql.user (Host,User) values ('{{ item }}','{{ MARIADB_HAPROXY_USER }}'); FLUSH PRIVILEGES;\""
  with_items: "{{ MARIADB_HAPROXY_HOSTS }}"
