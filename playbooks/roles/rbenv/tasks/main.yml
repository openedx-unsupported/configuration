---

# rbenv
# 
# Dependencies:
#
#   * common
# 
# Example play:
#
#   roles:
#   - common
#   - role: rbenv
#     rbenv_user: "{{ forum_user }}"
#     rbenv_user_home: "{{ forum_rbenv_dir }}"
#     rbenv_ruby_version: "{{ forum_ruby_version }}"
#
# Parameters:
#  
#   * rbenv_user
#   * rbenv_user_home
#   * rbenv_ruby_version
#
# cribbed from https://github.com/mmoya/ansible-playbooks/blob/master/rbenv/main.yml
# with a number of changes.
#

- fail: rbenv_user required for role
  when: rbenv_user is not defined

- fail: rbenv_user_home required for role
  when: rbenv_user_home is not defined

- fail: rbenv_ruby_version required for role
  when: rbenv_ruby_version is not defined

- name: rbenv | create {{ rbenv_user_home }}
  # workaround for the case where the parent
  # directory doesn't exist
  file: >
    path={{ rbenv_user_home }} 
    state=directory

- name: rbenv | create rbenv user {{ rbenv_user }}
  user: >
    name={{ rbenv_user }} 
    state=present 
    shell=/bin/bash 
    home={{ rbenv_user_home }}
    createhome=yes
  tags:
  - forum
  - update

- name: rbenv | ensure homedir permissions {{ rbenv_user_home }}
  # workaround for the case where the parent
  # directory doesn't exist
  file: >
    path={{ rbenv_user_home }} 
    owner={{ rbenv_user }}
    group={{ rbenv_user }}
    state=directory
    recurse=yes

- name: rbenv | install build depends
  apt: pkg={{ item }} state=present install_recommends=no
  with_items:
    - build-essential
    - git
    - libcurl4-openssl-dev
    - libmysqlclient-dev
    - libreadline-dev
    - libssl-dev
    - libxml2-dev
    - libxslt1-dev
    - zlib1g-dev
  tags:
  - ruby
  - install

- name: rbenv | update rbenv repo
  git: >
    repo=https://github.com/sstephenson/rbenv.git 
    dest={{ rbenv_user_home }}/.rbenv 
    version={{ rbenv_version }}
  sudo: true  
  sudo_user: "{{ rbenv_user }}"
  tags:
  - ruby
  - install

- name: rbenv | ensure .bashrc exists
  shell: touch {{ rbenv_user_home }}/.bashrc
  sudo: true  
  sudo_user: "{{ rbenv_user }}"
  tags:
  - ruby
  - update

- name: rbenv | drop a bash_profile
  copy: >
    src=../../common/files/bash_profile 
    dest={{ rbenv_user_home }}/.bash_profile 
    owner={{ rbenv_user }} 
    group={{ rbenv_user }}


- name: rbenv | ensure ruby_env exists
  template: >
    src=ruby_env.j2 
    dest={{ rbenv_user_home }}/ruby_env 
    owner={{ rbenv_user }} 
    group={{ rbenv_user }}
  tags:
  - ruby
  - update

- name: rebenv | add source of ruby_env to .bashrc
  lineinfile:
    dest="{{ rbenv_user_home }}/.bashrc"
    regexp='. {{ rbenv_user_home }}/ruby_env'    
    line='. {{ rbenv_user_home }}/ruby_env'

- name: rbenv | drop a bash_profile
  copy: >
    src=../../common/files/bash_profile 
    dest={{ rbenv_user_home }}/.bash_profile 
    owner={{ rbenv_user }} 
    group={{ rbenv_user }}

- name: rbenv | check ruby-build installed
  command: test -x /usr/local/bin/ruby-build
  register: rbuild_present
  ignore_errors: yes
  tags:
  - ruby
  - install

- name: rbenv | create temporary directory
  command: mktemp -d
  register: tempdir
  sudo: true  
  sudo_user: "{{ rbenv_user }}" 
  when: rbuild_present|failed
  tags:
  - ruby
  - install

- name: rbenv | clone ruby-build repo
  git: repo=https://github.com/sstephenson/ruby-build.git dest={{ tempdir.stdout }}/ruby-build
  when:  rbuild_present|failed
  sudo: true  
  sudo_user: "{{ rbenv_user }}" 
  tags:
  - ruby
  - install

- name: rbenv | install ruby-build
  command: ./install.sh chdir={{ tempdir.stdout }}/ruby-build
  when: rbuild_present|failed
  tags:
  - ruby
  - install

- name: rbenv | remove temporary directory
  file: path={{ tempdir.stdout }} state=absent
  when: rbuild_present|failed
  tags:
  - ruby
  - install

- name: rbenv | check ruby {{ rbenv_ruby_version }} installed
  shell: "{{ rbenv_user_home }}/.rbenv/bin/rbenv versions | grep {{ rbenv_ruby_version }}"
  register: ruby_installed
  sudo: true
  sudo_user: "{{ rbenv_user }}" 
  ignore_errors: yes
  tags:
  - ruby
  - install

- name: rbenv | install ruby {{ rbenv_ruby_version }}
  shell: "{{ rbenv_user_home }}/.rbenv/bin/rbenv install {{ rbenv_ruby_version }} creates={{rbenv_user_home}}/.rbenv/versions/{{rbenv_ruby_version}}"
  when: ruby_installed|failed
  sudo: true
  sudo_user: "{{ rbenv_user }}" 
  tags:
  - ruby
  - install

- name: rbenv | set global ruby {{ rbenv_ruby_version }}
  shell: "{{rbenv_user_home }}/.rbenv/bin/rbenv global {{ rbenv_ruby_version }}"
  sudo: true
  sudo_user: "{{ rbenv_user }}"
  tags:
  - ruby
  - install

- name: rbenv | install bundler
  shell: "{{ rbenv_user_home }}/.rbenv/shims/gem install bundler -v {{ rbenv_bundler_version }}"
  sudo: true
  sudo_user: "{{ rbenv_user }}" 
  tags:
  - ruby
  - install

- name: rbenv | rehash
  shell: "{{rbenv_user_home}}/.rbenv/bin/rbenv rehash"
  sudo: true
  sudo_user: "{{ rbenv_user }}" 
  tags:
  - ruby
  - install
