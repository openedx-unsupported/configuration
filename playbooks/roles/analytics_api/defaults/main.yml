---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://openedx.atlassian.net/wiki/display/OpenOPS
# code style: https://openedx.atlassian.net/wiki/display/OpenOPS/Ansible+Code+Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
##
# Defaults for role analytics_api
#

ANALYTICS_API_GIT_IDENTITY: !!null

# depends upon Newrelic being enabled via COMMON_ENABLE_NEWRELIC
# and a key being provided via NEWRELIC_LICENSE_KEY
ANALYTICS_API_NEWRELIC_APPNAME: "{{ COMMON_ENVIRONMENT }}-{{ COMMON_DEPLOYMENT }}-analytics-api"
ANALYTICS_API_PIP_EXTRA_ARGS: "-i {{ COMMON_PYPI_MIRROR_URL }}"
ANALYTICS_API_NGINX_PORT: "18100"

ANALYTICS_API_DEFAULT_DB_NAME: 'analytics-api'
ANALYTICS_API_REPORTS_DB_NAME: 'reports'

ANALYTICS_API_DATABASES:
  # rw user
  default:
    ENGINE: 'django.db.backends.mysql'
    NAME: '{{ ANALYTICS_API_DEFAULT_DB_NAME }}'
    USER: 'api001'
    PASSWORD: 'password'
    HOST: 'localhost'
    PORT: '3306'
  # read-only user
  reports:
    ENGINE: 'django.db.backends.mysql'
    NAME: '{{ ANALYTICS_API_REPORTS_DB_NAME }}'
    USER: 'reports001'
    PASSWORD: 'password'
    HOST: 'localhost'
    PORT: '3306'

ANALYTICS_API_VERSION: "master"
# Default dummy user, override this!!
ANALYTICS_API_USERS:
  "dummy-api-user": "changeme"

ANALYTICS_API_SECRET_KEY: 'Your secret key here'
ANALYTICS_API_TIME_ZONE: 'UTC'
ANALYTICS_API_LANGUAGE_CODE: 'en-us'
ANALYTICS_API_EMAIL_HOST: 'localhost'
ANALYTICS_API_EMAIL_HOST_USER: 'mail_user'
ANALYTICS_API_EMAIL_HOST_PASSWORD: 'mail_password'
ANALYTICS_API_EMAIL_PORT: 587
ANALYTICS_API_AUTH_TOKEN: 'put-your-api-token-here'


ANALYTICS_API_ELASTICSEARCH_LEARNERS_HOST: 'localhost'
ANALYTICS_API_ELASTICSEARCH_LEARNERS_INDEX: 'roster_1_2'
ANALYTICS_API_ELASTICSEARCH_LEARNERS_UPDATE_INDEX: 'index_updates'
ANALYTICS_API_ELASTICSEARCH_CONNECTION_CLASS: !!null
ANALYTICS_API_ELASTICSEARCH_AWS_ACCESS_KEY_ID: !!null
ANALYTICS_API_ELASTICSEARCH_AWS_SECRET_ACCESS_KEY: !!null
ANALYTICS_API_ELASTICSEARCH_CONNECTION_DEFAULT_REGION: 'us-east-1'
ANALYTICS_API_DATE_FORMAT: '%Y-%m-%d'
ANALYTICS_API_DATETIME_FORMAT: '%Y-%m-%dT%H%M%S'
ANALYTICS_API_DEFAULT_PAGE_SIZE: 25
ANALYTICS_API_MAX_PAGE_SIZE: 100

ANALYTICS_API_BASE_URL: 'http://localhost:8100'
ANALYTICS_API_DATA_DIR: '{{ COMMON_DATA_DIR }}/{{ analytics_api_service_name }}'
ANALYTICS_API_MEDIA_ROOT: '{{ ANALYTICS_API_DATA_DIR }}/static/reports'
ANALYTICS_API_MEDIA_URL: '/static/reports/'

# Example settings to use Amazon S3 as a storage backend for course reports.
#
# This storage mechanism also provides support for pre-authenticated URLs with an expiry time,
# allowing temporary report downloads from secured S3 file locations.
#
# ANALYTICS_API_REPORT_DOWNLOAD_BACKEND:
#   DEFAULT_FILE_STORAGE: 'storages.backends.s3boto.S3BotoStorage'
#   AWS_ACCESS_KEY_ID: 'put-your-access-key-id-here'
#   AWS_SECRET_ACCESS_KEY: 'put-your-secret-access-key-here'
#   AWS_STORAGE_BUCKET_NAME: 'report-download-bucket'
#   COURSE_REPORT_FILE_LOCATION_TEMPLATE: '/{course_id}_{report_name}.csv'
#   COURSE_REPORT_DOWNLOAD_EXPIRY_TIME: 120
#
# By default, instead we use the local filesystem.
#
# Other storage providers can be used, as long as they provide the .url() method.

ANALYTICS_API_REPORT_DOWNLOAD_BACKEND:
  DEFAULT_FILE_STORAGE: 'django.core.files.storage.FileSystemStorage'
  MEDIA_ROOT: '{{ ANALYTICS_API_MEDIA_ROOT }}'
  MEDIA_URL: '{{ ANALYTICS_API_BASE_URL }}{{ ANALYTICS_API_MEDIA_URL }}'
  COURSE_REPORT_FILE_LOCATION_TEMPLATE: '{course_id}_{report_name}.csv'

ANALYTICS_API_SERVICE_CONFIG:
  ANALYTICS_DATABASE: 'reports'
  SECRET_KEY: '{{ ANALYTICS_API_SECRET_KEY }}'
  TIME_ZONE: '{{ ANALYTICS_API_TIME_ZONE }}'
  LANGUAGE_CODE: '{{ANALYTICS_API_LANGUAGE_CODE }}'
  # email config
  EMAIL_HOST: '{{ ANALYTICS_API_EMAIL_HOST }}'
  EMAIL_HOST_PASSWORD: '{{ ANALYTICS_API_EMAIL_HOST_PASSWORD }}'
  EMAIL_HOST_USER: '{{ ANALYTICS_API_EMAIL_HOST_USER }}'
  EMAIL_PORT: '{{ ANALYTICS_API_EMAIL_PORT }}'
  API_AUTH_TOKEN: '{{ ANALYTICS_API_AUTH_TOKEN }}'
  STATICFILES_DIRS: ['static']
  STATIC_ROOT: "{{ COMMON_DATA_DIR }}/{{ analytics_api_service_name }}/staticfiles"
  # db config
  DATABASE_OPTIONS:
    connect_timeout: 10
  DATABASES: '{{ ANALYTICS_API_DATABASES }}'
  ELASTICSEARCH_LEARNERS_HOST: '{{ ANALYTICS_API_ELASTICSEARCH_LEARNERS_HOST }}'
  ELASTICSEARCH_LEARNERS_INDEX: '{{ ANALYTICS_API_ELASTICSEARCH_LEARNERS_INDEX }}'
  ELASTICSEARCH_LEARNERS_UPDATE_INDEX: '{{ ANALYTICS_API_ELASTICSEARCH_LEARNERS_UPDATE_INDEX }}'
  ELASTICSEARCH_CONNECTION_CLASS: '{{ ANALYTICS_API_ELASTICSEARCH_CONNECTION_CLASS }}'
  ELASTICSEARCH_AWS_ACCESS_KEY_ID: '{{ ANALYTICS_API_ELASTICSEARCH_AWS_ACCESS_KEY_ID }}'
  ELASTICSEARCH_AWS_SECRET_ACCESS_KEY: '{{ ANALYTICS_API_ELASTICSEARCH_AWS_SECRET_ACCESS_KEY }}'
  ELASTICSEARCH_CONNECTION_DEFAULT_REGION: '{{ ANALYTICS_API_ELASTICSEARCH_CONNECTION_DEFAULT_REGION }}'
  DATE_FORMAT: '{{ ANALYTICS_API_DATE_FORMAT }}'
  DATETIME_FORMAT: '{{ ANALYTICS_API_DATETIME_FORMAT }}'
  DEFAULT_PAGE_SIZE: '{{ ANALYTICS_API_DEFAULT_PAGE_SIZE }}'
  MAX_PAGE_SIZE: '{{ ANALYTICS_API_MAX_PAGE_SIZE }}'
  REPORT_DOWNLOAD_BACKEND: '{{ ANALYTICS_API_REPORT_DOWNLOAD_BACKEND }}'

ANALYTICS_API_REPOS:
  - PROTOCOL: "{{ COMMON_GIT_PROTOCOL }}"
    DOMAIN: "{{ COMMON_GIT_MIRROR }}"
    PATH: "{{ COMMON_GIT_PATH }}"
    REPO: edx-analytics-data-api.git
    VERSION: "{{ ANALYTICS_API_VERSION }}"
    DESTINATION: "{{ analytics_api_code_dir }}"
    SSH_KEY: "{{ ANALYTICS_API_GIT_IDENTITY }}"

ANALYTICS_API_GUNICORN_WORKERS: "2"
ANALYTICS_API_GUNICORN_EXTRA: ""
ANALYTICS_API_GUNICORN_EXTRA_CONF: ""
#
# vars are namespace with the module name.
#

analytics_api_environment:
  DJANGO_SETTINGS_MODULE: "analyticsdataserver.settings.production"
  ANALYTICS_API_CFG: "{{ COMMON_CFG_DIR  }}/{{ analytics_api_service_name }}.yml"

analytics_api_service_name: "analytics_api"
analytics_api_user: "{{ analytics_api_service_name }}"
analytics_api_home: "{{ COMMON_APP_DIR }}/{{ analytics_api_service_name }}"
analytics_api_code_dir: "{{ analytics_api_home }}/{{ analytics_api_service_name }}"
analytics_api_conf_dir: "{{ analytics_api_home }}"

analytics_api_gunicorn_host: "127.0.0.1"
analytics_api_gunicorn_port: "8100"
analytics_api_gunicorn_timeout: "300"

analytics_api_django_settings: "production"

analytics_api_log_dir: "{{ COMMON_LOG_DIR }}/{{ analytics_api_service_name }}"

analytics_api_requirements_base: "{{ analytics_api_code_dir }}/requirements"
analytics_api_requirements:
  - base.txt
  - production.txt
  - optional.txt

#
# OS packages
#

analytics_api_debian_pkgs:
  - 'libmysqlclient-dev'

analytics_api_redhat_pkgs: []
