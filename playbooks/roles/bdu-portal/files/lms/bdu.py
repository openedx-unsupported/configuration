"""
Set of custom values user for Big Data University deployments
"""
import datetime
import os

from path import Path as path

from .production import *

CONFIG_ROOT = path(os.environ.get('CONFIG_ROOT', ENV_ROOT))

SERVICE_VARIANT = os.environ.get('SERVICE_VARIANT', None)

### BDU config files ##########################################################
with open(CONFIG_ROOT / "bdu.env.json") as env_file:
    BDU_ENV_TOKENS = json.load(env_file)

with open(CONFIG_ROOT / "bdu.auth.json") as env_file:
    BDU_AUTH_TOKENS = json.load(env_file)

COPYRIGHT_YEAR = str(datetime.datetime.now().year)

# Branded header and footer
HEADER_NAVIGATION_LINKS = BDU_ENV_TOKENS.get('HEADER_NAVIGATION_LINKS', [])
FOOTER_NAVIGATION_LINKS = BDU_ENV_TOKENS.get('FOOTER_NAVIGATION_LINKS', [])
FOOTER_FOOTNOTE = BDU_ENV_TOKENS.get('FOOTER_FOOTNOTE', '')
SHOW_POWERED_BY_LOGO = BDU_ENV_TOKENS.get('SHOW_POWERED_BY_LOGO', True)

PRIVATE_PORTAL_URL = BDU_ENV_TOKENS.get('PRIVATE_PORTAL_URL')
OFFERS_URL = BDU_ENV_TOKENS.get('OFFERS_URL', '{}/offers'.format(PRIVATE_PORTAL_URL))

# Sign in/Registration control
SIGN_IN_URL = BDU_ENV_TOKENS.get('SIGN_IN_URL', '')
REGISTER_URL = BDU_ENV_TOKENS.get('REGISTER_URL', '')
ENABLE_REGISTER_BUTTON = BDU_ENV_TOKENS.get('ENABLE_REGISTER_BUTTON', True)
MAX_FAILED_LOGIN_ATTEMPTS_ALLOWED = BDU_ENV_TOKENS.get('MAX_FAILED_LOGIN_ATTEMPTS_ALLOWED', 5)
FEATURES['ENABLE_MAX_FAILED_LOGIN_ATTEMPTS'] = BDU_ENV_TOKENS.get('ENABLE_MAX_FAILED_LOGIN_ATTEMPTS', True)
SAML_STRICT_ENABLED = BDU_ENV_TOKENS.get('SAML_STRICT_ENABLED', True)

# Custom Logo URL Settings
LOGO_URL = BDU_ENV_TOKENS.get('LOGO_URL', 'https://staglab.skillsnetwork.site/logos/original/missing.png')
LOGO_LINK_URL = BDU_ENV_TOKENS.get('LOGO_LINK_URL', '')

# Custom Favicon URL Settings
# FAVICON_PATH = BDU_ENV_TOKENS.get('FAVICON_URL', FAVICON_PATH)

# OAuth2 login
BDU_PORTAL_OAUTH = {
    'ID_KEY': BDU_ENV_TOKENS.get('SSO_OAUTH_ID_KEY', 'id'),
    'FULL_NAME_KEY': BDU_ENV_TOKENS.get('SSO_OAUTH_FULL_NAME_KEY', 'name'),
    'FAMILY_NAME_KEY': BDU_ENV_TOKENS.get('SSO_OAUTH_FAMILY_NAME_KEY', 'family_name'),
    'GIVEN_NAME_KEY': BDU_ENV_TOKENS.get('SSO_OAUTH_GIVEN_NAME_KEY', 'given_name'),
    'USERNAME_KEY': BDU_ENV_TOKENS.get('SSO_OAUTH_USERNAME_KEY', 'username'),
    'TOKEN_KEY': BDU_ENV_TOKENS.get('SSO_OAUTH_TOKEN_KEY', 'token'),
    'ID_TOKEN_AVAILABLE': BDU_ENV_TOKENS.get('SSO_OAUTH_ID_TOKEN_AVAILABLE'),
    'FULL_NAME_AVAILABLE': BDU_ENV_TOKENS.get('SSO_OAUTH_FULL_NAME_AVAILABLE'),
    'GIVEN_NAME_AVAILABLE': BDU_ENV_TOKENS.get('SSO_OAUTH_GIVEN_NAME_AVAILABLE'),
    'FAMILY_NAME_AVAILABLE': BDU_ENV_TOKENS.get('SSO_OAUTH_FAMILY_NAME_AVAILABLE'),
    'USERNAME_AVAILABLE': BDU_ENV_TOKENS.get('SSO_OAUTH_USERNAME_AVAILABLE'),
    'AUTHORIZATION_URL': BDU_ENV_TOKENS.get('SSO_OAUTH_AUTHORIZATION_URL', ''),
    'ACCESS_TOKEN_URL': BDU_ENV_TOKENS.get('SSO_OAUTH_ACCESS_TOKEN_URL', ''),
    'ACCESS_TOKEN_METHOD': BDU_ENV_TOKENS.get('SSO_OAUTH_ACCESS_TOKEN_METHOD', 'POST'),
    'DEFAULT_SCOPE': BDU_ENV_TOKENS.get('SSO_OAUTH_DEFAULT_SCOPE'),
    'PROFILE_URL': BDU_ENV_TOKENS.get('SSO_OAUTH_PROFILE_URL', ''),
    'PROFILE_METHOD': BDU_ENV_TOKENS.get('SSO_OAUTH_PROFILE_METHOD', 'POST'),
    'PROFILE_AUTHENTICATED': BDU_ENV_TOKENS.get('SSO_OAUTH_PROFILE_AUTHENTICATED'),
    'PROFILE_TOKEN_LOCATION': BDU_ENV_TOKENS.get('SSO_OAUTH_PROFILE_TOKEN_LOCATION', 'params'),
    'PROFILE_TOKEN_VALUE': BDU_ENV_TOKENS.get('SSO_OAUTH_PROFILE_TOKEN_VALUE', '{0}'),
    'PROFILE_RESPONSE_ARRAY': BDU_ENV_TOKENS.get('SSO_OAUTH_PROFILE_RESPONSE_ARRAY', False)
}

# Competitions
COMPETITIONS_ENABLED = BDU_ENV_TOKENS.get('COMPETITIONS_ENABLED', False)
COMPETITIONS_URL = BDU_ENV_TOKENS.get('COMPETITIONS_URL', '')

# Student Support
LEARNER_SUPPORT_CONFIG = BDU_ENV_TOKENS.get('LEARNER_SUPPORT_CONFIG', {
    'SUPPORT_ENABLED': False
});

ENABLE_IBM_IDA_STATS = BDU_ENV_TOKENS.get('ENABLE_IBM_IDA_STATS', False)
IBM_IDA_STATS_URL = BDU_ENV_TOKENS.get('IBM_IDA_STATS_URL', '//1.www.s81c.com/common/stats/ida_stats.js')

### BDU Labs ##################################################################
BDU_LABS_ROOT_URL = BDU_ENV_TOKENS.get('BDU_LABS_ROOT_URL')
BDU_LABS_OAUTH_CLIENT_NAME = BDU_ENV_TOKENS.get('BDU_LABS_OAUTH_CLIENT_NAME')

# BDU Labs API
BDU_LABS_API_URL = BDU_ENV_TOKENS.get('BDU_LABS_API_URL')
BDU_LABS_ACCESS_KEY = BDU_AUTH_TOKENS.get('BDU_LABS_ACCESS_KEY')
BDU_LABS_SECRET_KEY = BDU_AUTH_TOKENS.get('BDU_LABS_SECRET_KEY')

##### ORA2 ######
# Prefix for uploads of example-based assessment AI classifiers
# This can be used to separate uploads for different environments
# within the same S3 bucket.
ORA2_FILEUPLOAD_BACKEND = BDU_ENV_TOKENS.get("ORA2_FILEUPLOAD_BACKEND", 'django')

REGISTRATION_EXTRA_FIELDS['privacy'] = 'hidden'

X_FRAME_OPTIONS = 'SAMEORIGIN'
REGISTRATION_MINIMUM_AGE = None

ACCOUNT_ADDITIONAL_INFORMATION_FIELDS_ENABLED = ENV_TOKENS.get(
    'ACCOUNT_ADDITIONAL_INFORMATION_FIELDS_ENABLED',
    {
        "level_of_education": True,
        "gender": True,
        "year_of_birth": True,
        "preferred_language": True,
    }
)

LOGOUT_REDIRECT_URL = ENV_TOKENS.get("LOGOUT_REDIRECT_URL", '/')
SESSION_INACTIVITY_TYPE = AUTH_TOKENS.get("SESSION_INACTIVITY_TYPE")

if FEATURES.get('ENABLE_THIRD_PARTY_AUTH'):
    ALLOW_UNPRIVILEGED_SSO_PROVIDER_QUERY = ENV_TOKENS.get('ALLOW_UNPRIVILEGED_SSO_PROVIDER_QUERY', False)

TPA_PROVIDER_BURST_THROTTLE = ENV_TOKENS.get('TPA_PROVIDER_BURST_THROTTLE', TPA_PROVIDER_BURST_THROTTLE)
TPA_PROVIDER_SUSTAINED_THROTTLE = ENV_TOKENS.get('TPA_PROVIDER_SUSTAINED_THROTTLE', TPA_PROVIDER_SUSTAINED_THROTTLE)
