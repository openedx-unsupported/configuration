- name: configure the boto profiles for alton
  template: >
    src="boto.j2"
    dest="{{ alton_app_dir }}/.boto"
    owner="{{ alton_user }}"
    group="{{ common_web_user }}"
    mode="0640"
  notify: restart alton

- name: checkout the code
  git: >
    dest="{{ alton_code_dir }}" repo="{{ alton_source_repo }}"
    version="{{ alton_version }}" accept_hostkey=yes
  sudo_user: "{{ alton_user }}"
  register: alton_checkout
  notify: restart alton

- name: install the requirements
  pip: >
    requirements="{{ alton_requirements_file }}"
    virtualenv="{{ alton_venv_dir }}"
    state=present
    extra_args="-i {{ COMMON_PYPI_MIRROR_URL }}"
  sudo_user: "{{ alton_user }}"
  notify: restart alton

- name: create the supervisor wrapper
  template: >
    src="{{ alton_supervisor_wrapper|basename }}.j2"
    dest="{{ alton_supervisor_wrapper }}"
    mode=0755
  sudo_user: "{{ alton_user }}"
  notify: restart alton

- name: create a supervisor config
  template: >
    src=alton.conf.j2 dest="{{ supervisor_available_dir }}/alton.conf"
    owner="{{ supervisor_user }}"
    group="{{ supervisor_user }}"
  sudo_user: "{{ supervisor_user }}"
  notify: restart alton

- name: enable the supervisor config
  file: >
    src="{{ supervisor_available_dir }}/alton.conf"
    dest="{{ supervisor_cfg_dir }}/alton.conf"
    state=link
    force=yes
    mode=0644
  sudo_user: "{{ supervisor_user }}"
  when: not disable_edx_services
  notify: restart alton

- name: update supervisor configuration
  shell:  "{{ supervisor_ctl }} -c {{ supervisor_cfg }} update"
  register: supervisor_update
  changed_when: supervisor_update.stdout is defined and supervisor_update.stdout != ""
  when: not disable_edx_services

- name: ensure alton is started
  supervisorctl_local: >
    name=alton
    supervisorctl_path={{ supervisor_ctl }}
    config={{ supervisor_cfg }}
    state=started
  when: not disable_edx_services

- include: tag_ec2.yml tags=deploy
  when: COMMON_TAG_EC2_INSTANCE
