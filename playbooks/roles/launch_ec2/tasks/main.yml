# Launches an ec2 instance and blocks until the instance is up
# adds it to the host group 
# Will terminate an instance if one and only one already exists
# with the same name

- name: lookup tags for terminating existing instance
  local_action:
    module: ec2_lookup
    region: "{{ region }}"
    tags:
      Name: "{{ name_tag }}"
  register: tag_lookup
  when: terminate_instance == true

- debug: msg="Too many results returned, not terminating!"
  when: terminate_instance == true and tag_lookup.instance_ids|length > 1

- name: terminating single instance
  local_action:
    module: ec2
    state: 'absent'
    region: "{{ region }}"
    instance_ids: ${tag_lookup.instance_ids}
  when: terminate_instance == true and tag_lookup.instance_ids|length == 1

- name: launch_ec2 | Launch ec2 instance 
  local_action: 
    module: ec2 
    keypair: "{{ keypair }}"
    group: "{{ security_group }}"
    instance_type: "{{ instance_type }}"
    image: "{{ ami }}"
    wait: true 
    region: "{{ region }}"
    instance_tags: "{{instance_tags}}"
    root_ebs_size: "{{ root_ebs_size }}"
  register: ec2

- name: launch_ec2 | Add DNS name
  local_action:
    module: route53
    overwrite: yes
    command: create
    zone: "{{ dns_zone }}"
    type: CNAME
    ttl: 300
    record: "{{ dns_name }}.{{ dns_zone }}"
    value: "{{ item.public_dns_name }}"
  with_items: "{{ ec2.instances }}"

- name: launch_ec2 | Add DNS name studio
  local_action:
    module: route53
    overwrite: yes
    command: create
    zone: "{{ dns_zone }}"
    type: CNAME
    ttl: 300
    record: "studio.{{ dns_name }}.{{ dns_zone }}"
    value: "{{ item.public_dns_name }}"
  with_items: "{{ ec2.instances }}"

- name: launch_ec2 | Add DNS name preview
  local_action:
    module: route53
    overwrite: yes
    command: create
    zone: "{{ dns_zone }}"
    type: CNAME
    ttl: 300
    record: "preview.{{ dns_name }}.{{ dns_zone }}"
    value: "{{ item.public_dns_name }}"
  with_items: "{{ ec2.instances }}"


- name: launch_ec2 | Add new instance to host group
  local_action: >
    add_host 
      hostname={{ item.public_ip }} 
      groupname=launched 
  with_items: "{{ ec2.instances }}"

- name: launch_ec2 | Wait for SSH to come up
  local_action: >
    wait_for 
      host={{ item.public_dns_name }}
      state=started
      port=22 
      delay=60 
      timeout=320
  with_items: "{{ ec2.instances }}"
