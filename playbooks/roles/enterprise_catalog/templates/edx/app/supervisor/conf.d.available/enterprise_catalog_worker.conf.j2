{% for w in enterprise_catalog_workers %}
[program:{{ w.queue }}_{{ w.concurrency }}]

environment={% if COMMON_ENABLE_NEWRELIC_APP %}NEW_RELIC_APP_NAME={{ ENTERPRISE_CATALOG_NEWRELIC_WORKERS_APPNAME }},NEW_RELIC_DISTRIBUTED_TRACING_ENABLED={{ ENTERPRISE_CATALOG_WORKERS_ENABLE_NEWRELIC_DISTRIBUTED_TRACING }},NEW_RELIC_LICENSE_KEY={{ NEWRELIC_LICENSE_KEY }},{% endif -%}CONCURRENCY={{ w.concurrency }},LOGLEVEL=info,DJANGO_SETTINGS_MODULE={{ worker_django_settings_module }},PYTHONPATH={{ enterprise_catalog_code_dir }},BOTO_CONFIG="{{ enterprise_catalog_app_dir }}/.boto,EDX_REST_API_CLIENT_NAME={{ COMMON_ENVIRONMENT }}-{{ COMMON_DEPLOYMENT }}-enterprise-catalog-worker-{{ w.queue }},"
user={{ common_web_user }}
directory={{ enterprise_catalog_code_dir }}
stdout_logfile={{ supervisor_log_dir }}/%(program_name)s-stdout.log
stderr_logfile={{ supervisor_log_dir }}/%(program_name)s-stderr.log

command={{ enterprise_catalog_app_dir }}/worker.sh worker -A enterprise_catalog --app enterprise_catalog.celery:app --loglevel=info --queue={{ w.queue }} --hostname=enterprise_catalog.{{ w.queue }}.%%h --concurrency={{ w.concurrency }} {{ '--maxtasksperchild ' + w.max_tasks_per_child|string if w.max_tasks_per_child is defined else '' }} {{ '--without-heartbeat' if not ENTERPRISE_CATALOG_CELERY_HEARTBEAT_ENABLED|bool else '' }}
killasgroup=true
stopwaitsecs={{ w.stopwaitsecs | default(ENTERPRISE_CATALOG_WORKER_DEFAULT_STOPWAITSECS) }}
; Set autorestart to `true`. The default value for autorestart is `unexpected`, but celery < 4.x will exit
; with an exit code of zero for certain types of unrecoverable errors, so we must make sure that the workers
; are auto restarted even when exiting with code 0.
; The Celery bug was reported in https://github.com/celery/celery/issues/2024, and is fixed in Celery 4.0.0.
autorestart=true

{% endfor %}

[group:enterprise_catalog_worker]
programs={%- for w in enterprise_catalog_workers %}{{ w.queue }}_{{ w.concurrency }}{%- if not loop.last %},{%- endif %}{%- endfor %}
