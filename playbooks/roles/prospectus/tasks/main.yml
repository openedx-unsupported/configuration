- name: Setup Prospectus Build Environment
  when: PROSPECTUS_ENABLE_PRE_BUILD|bool
  block:
  # Remove all of the old code
  - name: Remove read-only ssh key for the prospectus repo
    file:
      path: "{{ prospectus_git_identity }}"
      state: absent
    when: PROSPECTUS_GIT_IDENTITY != "none"

  - name: check if cache dir exists
    stat:
       path: "{{ prospectus_code_dir }}/.cache"
    register: register_cache_dir

  - name: check if data dir exists
    stat:
       path: "{{ PROSPECTUS_DATA_DIR }}"
    register: register_data_dir

  - name: create prospectus temp cache folder
    file:
      path: "/tmp/cache-data"
      state: directory
    when: PROSPECTUS_RETAIN_CACHE_PUBLIC_DIRS|bool and register_cache_dir.stat.exists

  - name: move cache dir to temp
    command: mv {{ prospectus_code_dir }}/.cache /tmp/cache-data/
    when: PROSPECTUS_RETAIN_CACHE_PUBLIC_DIRS|bool and register_cache_dir.stat.exists

  - name: Remove old git repo
    file:
      state: absent
      path: "{{ prospectus_code_dir }}/"

  - name: Remove old app repo
    file:
      state: absent
      path: "{{ prospectus_app_dir }}"

  - name: Remove data directory
    file:
      state: absent
      path: "{{ PROSPECTUS_DATA_DIR }}"
    when: not PROSPECTUS_RETAIN_CACHE_PUBLIC_DIRS|bool

  - name: Create prospectus app folder
    file:
      path: "{{ prospectus_app_dir }}"
      state: directory
      owner: "{{ prospectus_user }}"
      group: "{{ prospectus_user }}"

  # This key is only needed if you are pulling down a private
  # prospectus repo
  - name: Install read-only ssh key for the prospectus repo
    copy:
      content: "{{ PROSPECTUS_GIT_IDENTITY }}"
      dest: "{{ prospectus_git_identity }}"
      force: yes
      owner: "{{ prospectus_user }}"
      mode: "0600"
    when: PROSPECTUS_GIT_IDENTITY != "none"

  - name: "Checkout prospectus repo into {{ prospectus_code_dir }} with key"
    git:
      dest: "{{ prospectus_code_dir }}"
      repo: "{{ prospectus_repo }}"
      version: "{{ PROSPECTUS_VERSION }}"
      accept_hostkey: yes
      key_file: "{{ prospectus_git_identity }}"
    become_user: "{{ prospectus_user }}"
    register: prospectus_checkout_with_key
    when: PROSPECTUS_GIT_IDENTITY != "none"

  - name: Checkout prospectus repo into {{ prospectus_code_dir }} without key
    git:
      dest: "{{ prospectus_code_dir }}"
      repo: "{{ prospectus_repo }}"
      version: "{{ PROSPECTUS_VERSION }}"
      accept_hostkey: yes
    become_user: "{{ prospectus_user }}"
    register: prospectus_checkout_without_key
    when: PROSPECTUS_GIT_IDENTITY == "none"

  - name: move cache dir to {{ prospectus_code_dir }}
    command: mv /tmp/cache-data/.cache "{{ prospectus_code_dir }}/"
    when: PROSPECTUS_RETAIN_CACHE_PUBLIC_DIRS|bool and register_cache_dir.stat.exists

  - name: create prospectus public folder
    file:
      path: "{{ prospectus_code_dir }}/public"
      state: directory
      owner: "{{ prospectus_user }}"
      group: "{{ prospectus_user }}"
    when: PROSPECTUS_RETAIN_CACHE_PUBLIC_DIRS|bool and register_data_dir.stat.exists

  - name: move data dir to {{ prospectus_code_dir }}/public
    shell: "mv {{ PROSPECTUS_DATA_DIR }}/* {{ prospectus_code_dir }}/public/"
    when: PROSPECTUS_RETAIN_CACHE_PUBLIC_DIRS|bool and register_data_dir.stat.exists

  - name: install python3.8
    apt:
      pkg:
        - python3.8-dev
        - python3.8-distutils
      update_cache: yes
    register: install_pkgs
    until: install_pkgs is success
    retries: 10
    delay: 5
    when: prospectus_use_python3
    tags:
      - install
      - install:system-requirements

  - name: Add prospectus configuration file
    template:
      src: ".env.environment.j2"
      dest: "{{ prospectus_code_dir }}/config/.env.keys"
      mode: "0644"
      owner: "{{ prospectus_user }}"
      group: "{{ prospectus_user }}"

  - name: Install nodeenv
    apt:
      name: nodeenv
      update_cache: yes
    become_user: "{{ prospectus_user }}"
    environment: "{{ prospectus_env_vars }}"
    register: install_pkgs
    until: install_pkgs is success
    retries: 10
    delay: 5
    tags:
      - install
      - install:system-requirements

  # Install node
  - name: Create nodeenv
    shell: "nodeenv {{ prospectus_nodeenv_dir }} --node={{ PROSPECTUS_NODE_VERSION }} --prebuilt --force"
    become_user: "{{ prospectus_user }}"
    environment: "{{ prospectus_env_vars }}"
    tags:
      - install
      - install:system-requirements

  - name: copy the template to the desired location
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: "{{ item.owner }}"
      group: "{{ item.group }}"
      mode: "{{ item.mode }}"
    with_items:
      - { src: 'prospectus_env.j2', dest: '{{ prospectus_app_dir }}/prospectus_env', owner: '{{ prospectus_user }}', group: '{{ prospectus_user }}', mode: '0644' }

  # Set the npm registry
  # This needs to be done as root since npm is weird about
  # chown - https://github.com/npm/npm/issues/3565
  - name: Set the npm registry
    shell: "npm config set registry '{{ COMMON_NPM_MIRROR_URL }}'"
    args:
      creates: "{{ prospectus_code_dir }}/.npmrc"
    environment: "{{ prospectus_env_vars }}"
    tags:
      - install
      - install:app-requirements

  # Set the npm registry permissions
  - name: Set the npm registry permissions
    file:
      path: "{{ prospectus_code_dir }}/.npmrc"
      owner: "{{ prospectus_user }}"
      group: "{{ prospectus_user }}"
    tags:
      - install
      - install:app-requirements

  # Install with the shell command instead of the ansible npm module so we don't accidentally re-write package.json
  - name: install node dependencies
    shell: "{{ prospectus_nodeenv_bin }}/npm install --unsafe-perm=true --allow-root"
    args:
      chdir: "{{ prospectus_code_dir }}"
    environment: "{{ prospectus_env_vars }}"
    become_user: "{{ prospectus_user }}"
    tags:
      - install
      - install:app-requirements
  - name: Install pngquant
    apt:
      name: "pngquant"
      update_cache: yes
    register: install_pkgs
    until: install_pkgs is success
    retries: 10
    delay: 5
    tags:
      - install
      - install:system-requirements

# Install with the shell command instead of the ansible npm module so we don't accidentally re-write package.json
- name: run prospectus build
  when: PROSPECTUS_ENABLE_NPM_BUILD|bool
  shell: "{{ prospectus_nodeenv_bin }}/npm run build"
  args:
    chdir: "{{ prospectus_code_dir }}"
  environment: "{{ prospectus_env_vars }}"
  become_user: "{{ prospectus_user }}"
  tags:
    - install
    - install:app-requirements

- name: Post process prospectus gatsby build
  when: PROSPECTUS_ENABLE_POST_BUILD|bool
  block:
  - name: Compress images
    shell: "find public -name '*.png' -exec pngquant --skip-if-larger --quality 50-75 --ext .png --force -- {} \\;"
    args:
      chdir: "{{ prospectus_code_dir }}"
    become_user: "{{ prospectus_user }}"

  # Copy over the target from the previous build to where it needs to be
  - name: Create data folder
    file:
      path: "{{ PROSPECTUS_DATA_DIR }}"
      state: directory
      owner: "{{ prospectus_user }}"
      group: "{{ prospectus_user }}"

  - name: Move prospectus public folder to var folder
    shell: "mv {{ prospectus_code_dir }}/public/* {{ PROSPECTUS_DATA_DIR }}"

  - name: Set Prospectus S3 max concurrency
    become_user: "{{ prospectus_user }}"
    shell: 'aws configure set s3.max_concurrent_requests {{ PROSPECTUS_S3_UPLOAD_MAX_CONCURENCT_REQUESTS }}'
    when: PROSPECTUS_S3_UPLOAD_ENABLED|bool
    tags:
      - install
      - install:system-requirements

  - name: Upload prospectus to S3
    become_user: "{{ prospectus_user }}"
    shell: "aws s3 sync --quiet {{ PROSPECTUS_DATA_DIR }} s3://{{ PROSPECTUS_S3_HOSTING_BUCKET }}/{{ PROSPECTUS_S3_HOSTING_PREFIX | default(PROSPECTUS_VERSION, true) }}"
    when: PROSPECTUS_S3_UPLOAD_ENABLED|bool
    tags:
      - install
      - install:system-requirements

  - name: Upload prospectus hashed static files to S3
    become_user: "{{ prospectus_user }}"
    shell: "aws s3 cp --recursive {{ PROSPECTUS_DATA_DIR }} s3://{{ PROSPECTUS_S3_HOSTING_BUCKET }}/static_hashed --exclude '*' --include '/*.css' --include '/*.js' --include '/*.map' --exclude '*/*' --include 'static/*' --include 'page-data/sq/d/*'"
    when: PROSPECTUS_S3_UPLOAD_ENABLED|bool
    tags:
      - install
      - install:system-requirements

  - name: Download prospectus redirects to GoCD
    when: PROSPECTUS_S3_UPLOAD_ENABLED|bool
    fetch:
      src: "{{ prospectus_redirect_file }}"
      dest: "{{ artifact_path }}/prospectus-redirects.conf"
      flat: yes
