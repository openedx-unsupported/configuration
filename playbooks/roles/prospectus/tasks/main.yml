# Remove all of the old code
- name: Remove read-only ssh key for the prospectus repo
  file:
    path: "{{ prospectus_git_identity }}"
    state: absent
  when: PROSPECTUS_GIT_IDENTITY != "none"

- name: Remove old git repo
  file:
    state: absent
    path: "{{ prospectus_code_dir }}/"

- name: Remove old app repo
  file:
    state: absent
    path: "{{ prospectus_app_dir }}"

- name: Remove data directory
  file:
    state: absent
    path: "{{ PROSPECTUS_DATA_DIR }}"

- name: Create prospectus app folder
  file:
    path: "{{ prospectus_app_dir }}"
    state: directory
    owner: "{{ prospectus_user }}"
    group: "{{ prospectus_user }}"

# This key is only needed if you are pulling down a private
# prospectus repo
- name: Install read-only ssh key for the prospectus repo
  copy:
    content: "{{ PROSPECTUS_GIT_IDENTITY }}"
    dest: "{{ prospectus_git_identity }}"
    force: yes
    owner: "{{ prospectus_user }}"
    mode: "0600"
  when: PROSPECTUS_GIT_IDENTITY != "none"

- name: "Checkout prospectus repo into {{ prospectus_code_dir }}"
  git:
    dest: "{{ prospectus_code_dir }}"
    repo: "{{ prospectus_repo }}"
    version: "{{ PROSPECTUS_VERSION }}"
    accept_hostkey: yes
    key_file: "{{ prospectus_git_identity }}"
  become_user: "{{ prospectus_user }}"
  register: prospectus_checkout
  when: PROSPECTUS_GIT_IDENTITY != "none"

- name: Checkout prospectus repo into {{ prospectus_code_dir }}
  git:
    dest: "{{ prospectus_code_dir }}"
    repo: "{{ prospectus_repo }}"
    version: "{{ PROSPECTUS_VERSION }}"
    accept_hostkey: yes
  become_user: "{{ prospectus_user }}"
  register: prospectus_checkout
  when: PROSPECTUS_GIT_IDENTITY == "none"

- name: build virtualenv with python2.7
  command: "virtualenv --python=python2.7 {{ prospectus_venv_dir }}"
  args:
    creates: "{{ prospectus_venv_dir }}/bin/pip"
  become_user: "{{ prospectus_user }}"
  when: not edx_django_service_use_python3
  tags:
    - install
    - install:system-requirements

- name: Pin pip to a specific version.
  command: "{{ prospectus_venv_dir }}/bin/pip install pip=={{ COMMON_PIP_VERSION }}"
  become_user: "{{ prospectus_user }}"
  tags:
    - install
    - install:system-requirements

- name: Add prospectus configuration file
  template:
    src: ".env.environment.j2"
    dest: "{{ prospectus_code_dir }}/config/.env.keys"
    mode: "0644"
    owner: "{{ prospectus_user }}"
    group: "{{ prospectus_user }}"

# NOTE (CCB): Ideally we should use the pip Ansible command,
# but that doesn't seem to work with the Python 3.x virtualenv.
- name: install nodenv
  command: pip install nodeenv
  become_user: "{{ prospectus_user }}"
  environment: "{{ prospectus_env_vars }}"
  tags:
    - install
    - install:system-requirements

# Install node
- name: create nodeenv
  shell: "{{ prospectus_venv_dir }}/bin/nodeenv {{ prospectus_nodeenv_dir }} --node={{ PROSPECTUS_NODE_VERSION }} --prebuilt --force"
  tags:
    - install
    - install:system-requirements

# Set the npm registry
# This needs to be done as root since npm is weird about
# chown - https://github.com/npm/npm/issues/3565
- name: Set the npm registry
  shell: "npm config set registry '{{ COMMON_NPM_MIRROR_URL }}'"
  args:
    creates: "{{ prospectus_code_dir }}/.npmrc"
  environment: "{{ prospectus_env_vars }}"
  tags:
    - install
    - install:app-requirements

# Set the npm registry permissions
- name: Set the npm registry permissions
  file:
    path: "{{ prospectus_code_dir }}/.npmrc"
    owner: "{{ prospectus_user }}"
    group: "{{ prospectus_user }}"
  tags:
    - install
    - install:app-requirements

# Install with the shell command instead of the ansible npm module so we don't accidentally re-write package.json
- name: install node dependencies
  shell: "{{ prospectus_nodeenv_bin }}/npm install --unsafe-perm=true --allow-root"
  args:
    chdir: "{{ prospectus_code_dir }}"
  environment: "{{ prospectus_env_vars }}"
  become_user: "{{ prospectus_user }}"
  tags:
    - install
    - install:app-requirements

# Install with the shell command instead of the ansible npm module so we don't accidentally re-write package.json
- name: run prospectus build
  shell: "{{ prospectus_nodeenv_bin }}/npm run build"
  args:
    chdir: "{{ prospectus_code_dir }}"
  environment: "{{ prospectus_env_vars }}"
  become_user: "{{ prospectus_user }}"
  tags:
    - install
    - install:app-requirements

- name: Install pngquant
  apt:
    name: "pngquant"
  tags:
    - install
    - install:system-requirements

- name: Compress images
  shell: "find public -name '*.png' -exec pngquant --skip-if-larger --quality 50-75 --ext .png --force -- {} \\;"
  args:
    chdir: "{{ prospectus_code_dir }}"
  become_user: "{{ prospectus_user }}"

# Copy over the target from the previous build to where it needs to be
- name: Create data folder
  file:
    path: "{{ PROSPECTUS_DATA_DIR }}"
    state: directory
    owner: "{{ prospectus_user }}"
    group: "{{ prospectus_user }}"

- name: Move prospectus public folder to var folder
  shell: "mv {{ prospectus_code_dir }}/public/* {{ PROSPECTUS_DATA_DIR }}"
