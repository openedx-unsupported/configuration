#!/bin/bash

manifest_dir="/var/tmp/k8s/applications/"

cd $manifest_dir


{% if K8S_DJANGO_APPS|length %}
    k8s_apps="vault mysql redis elasticsearch {{ K8S_DJANGO_APPS }}"
{% else %}
    k8s_apps="vault mysql redis elasticsearch"
{% endif %}
    
for k8s_app in $k8s_apps; do
    
    kubectl create namespace $k8s_app
    
    if [[ $k8s_app == "vault" ]]; then
        helm install $k8s_app --namespace $k8s_app $k8s_app/ -f $k8s_app/development.yaml
        kustomize build vault-development-bootstrapper/ | kubectl apply -f -
        kustomize build vault-acl-job/development/ | kubectl apply -f -
    elif [[ $k8s_app == "edx-notes-api" ||  $k8s_app == "license-manager" ]]; then
        if [[ $k8s_app == "license-manager" ]]; then
              app_port={{ license_manager_gunicorn_port }}
              node_port={{ license_manager_node_port }}
        elif [[ $k8s_app == "edx-notes-api" ]]; then
              app_port={{ edx_notes_api_gunicorn_port }}
              node_port={{ edx_notes_api_node_port }}
        fi       
        helm install $k8s_app --namespace $k8s_app -f $k8s_app/development-config.yaml  -f $k8s_app/development-currently-deployed-image.yaml \
        --set-file django-ida.app.config=$k8s_app/$k8s_app.yaml $k8s_app/
        kubectl expose deployment $k8s_app -n $k8s_app --name=$k8s_app-nodeport --port=$app_port \
        --type=NodePort --overrides '{ "apiVersion": "v1","spec":{"ports":[{"port":'$app_port',"protocol":"TCP","nodePort":'$node_port'}]}}'
    else
        helm install $k8s_app --namespace $k8s_app $k8s_app/ -f $k8s_app/development.yaml
    fi
done
