---

- name: check out the demo course
  git: >
    dest={{ demo_code_dir }}  repo={{ demo_repo }} version={{ demo_version }}
    accept_hostkey=yes
  sudo_user: "{{ demo_edxapp_user }}"
  register: demo_checkout

- name: import demo course
  shell: >
    {{ demo_edxapp_venv_bin }}/python ./manage.py cms --settings=aws import {{ demo_edxapp_course_data_dir }} {{ demo_code_dir }}
    chdir={{ demo_edxapp_code_dir }}
  sudo_user: "{{ common_web_user }}"
  when: demo_checkout.changed

- name: create some test users and enroll them in the course
  shell: >
    {{ demo_edxapp_venv_bin }}/python ./manage.py lms --settings=aws --service-variant lms create_user -e {{ item.email }} -p {{ item.password }} -m {{ item.mode }} -c {{ demo_course_id }}
    chdir={{ demo_edxapp_code_dir }}
  sudo_user: "{{ common_web_user }}"
  with_items: demo_test_users
  when: demo_checkout.changed

- name: create staff user
  shell: >
    {{ demo_edxapp_venv_bin }}/python ./manage.py lms --settings=aws --service-variant lms create_user -e staff@example.com -p edx -s -c {{ demo_course_id }}
    chdir={{ demo_edxapp_code_dir }}
  sudo_user: "{{ common_web_user }}"
  when:
    - demo_checkout.changed
    - DEMO_CREATE_STAFF_USER

- name: add test users to the certificate whitelist
  shell: >
    {{ demo_edxapp_venv_bin }}/python ./manage.py lms --settings=aws --service-variant lms cert_whitelist -a {{ item.email }} -c {{ demo_course_id }}
    chdir={{ demo_edxapp_code_dir }}
  with_items: demo_test_users
  when: demo_checkout.changed

- name: seed the forums for the demo course
  shell: >
    {{ demo_edxapp_venv_bin }}/python ./manage.py lms --settings=aws seed_permissions_roles {{ demo_course_id }}
    chdir={{ demo_edxapp_code_dir }}
  with_items: demo_test_users
  when: demo_checkout.changed
