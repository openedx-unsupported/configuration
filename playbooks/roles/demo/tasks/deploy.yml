---

- name: check out the demo course
  git_2_0_1:
    dest: "{{ demo_code_dir }}"
    repo: "{{ demo_repo }}"
    version: "{{ demo_version }}"
    accept_hostkey: yes
  become_user: "{{ demo_edxapp_user }}"
  register: demo_checkout

- name: import demo course
  shell: "{{ demo_edxapp_venv_bin }}/python ./manage.py cms --settings=aws import {{ demo_edxapp_course_data_dir }} {{ demo_code_dir }}"
  args:
    chdir: "{{ demo_edxapp_code_dir }}"
  become_user: "{{ common_web_user }}"
  when: demo_checkout.changed

- name: create some test users
  shell: "{{ demo_edxapp_venv_bin }}/python ./manage.py lms --settings=aws --service-variant lms manage_user {{ item.username}} {{ item.email }} --initial-password-hash {{ item.hashed_password | quote }}"
  args:
    chdir: "{{ demo_edxapp_code_dir }}"
  become_user: "{{ common_web_user }}"
  with_items: demo_test_users
  when: demo_checkout.changed

- name: create staff user
  shell: "{{ demo_edxapp_venv_bin }}/python ./manage.py lms --settings=aws --service-variant lms manage_user staff staff@example.com --initial-password-hash {{ demo_hashed_password | quote }} --staff"
  args:
    chdir: "{{ demo_edxapp_code_dir }}"
  become_user: "{{ common_web_user }}"
  when:
    - demo_checkout.changed
    - DEMO_CREATE_STAFF_USER

- name: enroll test users in the demo course
  shell: "{{ demo_edxapp_venv_bin }}/python ./manage.py lms --settings=aws --service-variant lms enroll_user_in_course -e {{ item.email }} -c {{ demo_course_id }}"
  args:
    chdir: "{{ demo_edxapp_code_dir }}"
  become_user: "{{ common_web_user }}"
  with_items:
      - "{{ demo_test_users }}"
      - { email: 'staff@example.com' }
  when: demo_checkout.changed


- name: add test users to the certificate whitelist
  shell: "{{ demo_edxapp_venv_bin }}/python ./manage.py lms --settings=aws --service-variant lms cert_whitelist -a {{ item.email }} -c {{ demo_course_id }}"
  args:
    chdir: "{{ demo_edxapp_code_dir }}"
  with_items: demo_test_users
  when: demo_checkout.changed

- name: seed the forums for the demo course
  shell: "{{ demo_edxapp_venv_bin }}/python ./manage.py lms --settings=aws seed_permissions_roles {{ demo_course_id }}"
  args:
    chdir: "{{ demo_edxapp_code_dir }}"
  with_items: demo_test_users
  when: demo_checkout.changed
