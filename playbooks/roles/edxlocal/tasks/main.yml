# Installs packages to run edx locally on a single instance
# requires:
#  - group_vars/all
#  - common/tasks/main.yml
#
#  This installs mysql-server-5.5 though
#  in production we use mysql-5.1.62.
#
#  We could install from source instead:
#  http://downloads.mysql.com/archives/mysql-5.1/mysql-5.1.62.tar.gz
#
---
- name: install packages needed for single server
  apt: pkg={{','.join(edxlocal_debian_pkgs)}} install_recommends=yes state=present

- name: ensure mysql will listen on all ip interfaces (bind to 0.0.0.0)
  lineinfile: dest=/etc/mysql/my.cnf
    regexp='bind-address\s*=\s*127\.0\.0\.1\s*'
    line='bind-address   = 0.0.0.0'
    state=present
    backrefs=yes

- name: restart mysql
  service: name=mysql state=restarted

- name: setup the edxapp db user
  mysql_user: >
    name={{ EDXAPP_MYSQL_USER }}
    password={{ EDXAPP_MYSQL_PASSWORD }}
    priv='{{EDXAPP_MYSQL_DB_NAME}}.*:ALL'
    host={{ item }} 
  when: EDXAPP_MYSQL_USER is defined
  with_items:
    - "{{ ansible_hostname }}"
    - "{{ inventory_hostname }}"
    - 127.0.0.1
    - ::1

- name: create a database for edxapp
  mysql_db: >
    db=edxapp
    state=present
    encoding=utf8
  when: EDXAPP_MYSQL_USER is defined

- name: setup the xqueue db user
  mysql_user: >
    name={{ XQUEUE_MYSQL_USER }}
    password={{ XQUEUE_MYSQL_PASSWORD }}
    priv='{{XQUEUE_MYSQL_DB_NAME}}.*:ALL'
    host={{ item }} 
  when: XQUEUE_MYSQL_USER is defined
  with_items:
    - "{{ ansible_hostname }}"
    - "{{ inventory_hostname }}"
    - 127.0.0.1
    - ::1

- name: create a database for xqueue
  mysql_db: >
    db=xqueue
    state=present
    encoding=utf8
  when: XQUEUE_MYSQL_USER is defined

- name: setup the ora db user
  mysql_user: >
    name={{ ORA_MYSQL_USER }}
    password={{ ORA_MYSQL_PASSWORD }}
    priv='{{ORA_MYSQL_DB_NAME}}.*:ALL'
    host={{ item }} 
  when: ORA_MYSQL_USER is defined
  with_items:
    - "{{ ansible_hostname }}"
    - "{{ inventory_hostname }}"
    - 127.0.0.1
    - ::1

- name: create a database for ora
  mysql_db: >
    db=ora
    state=present
    encoding=utf8
  when: ORA_MYSQL_USER is defined

- name: create databases for analytics api
  mysql_db: >
    db={{ item }}
    state=present
    encoding=utf8
  when: ANALYTICS_API_CONFIG is defined
  with_items:
    - "{{ ANALYTICS_API_CONFIG['DATABASES']['default']['NAME'] }}"
    - "{{ ANALYTICS_API_CONFIG['DATABASES']['reports']['NAME'] }}"


- name: create api user for the analytics api
  mysql_user: >
    name=api001
    password=password
    priv='{{ ANALYTICS_API_CONFIG['DATABASES']['default']['NAME'] }}.*:ALL/reports.*:SELECT'
    host={{ item }} 
  when: ANALYTICS_API_CONFIG is defined
  with_items:
    - "{{ ansible_hostname }}"
    - "{{ inventory_hostname }}"
    - 127.0.0.1
    - ::1

- name: create read-only reports user for the analytics-api
  mysql_user: >
    name=reports001
    password=password
    priv='{{ ANALYTICS_API_CONFIG['DATABASES']['reports']['NAME'] }}.*:SELECT'
    host={{ item }} 
  when: ANALYTICS_API_CONFIG is defined
  with_items:
    - "{{ ansible_hostname }}"
    - "{{ inventory_hostname }}"
    - 127.0.0.1
    - ::1

- name: setup the migration db user
  mysql_user: >
    name={{ COMMON_MYSQL_MIGRATE_USER }}
    password={{ COMMON_MYSQL_MIGRATE_PASS }}
    priv='{{ item[0] }}.*:ALL'
    append_privs=yes
    host={{ item[1] }}
  when: item[0] != 'None'
  with_nested:
    - ["{{ EDXAPP_MYSQL_DB_NAME|default('None') }}",
       "{{ XQUEUE_MYSQL_DB_NAME|default('None') }}",
       "{{ ORA_MYSQL_DB_NAME|default('None') }}"]
    - [ "{{ ansible_hostname }}", "{{ inventory_hostname }}",
        "127.0.0.1", "::1" ]

- name: setup the migration db user for analytics
  mysql_user: >
    name={{ COMMON_MYSQL_MIGRATE_USER }}
    password={{ COMMON_MYSQL_MIGRATE_PASS }}
    priv='{{ item[0] }}.*:ALL'
    append_privs=yes
    host={{ item[1] }}
  when: ANALYTICS_API_CONFIG is defined
  with_nested:
    - [ "{{ ANALYTICS_API_CONFIG['DATABASES']['default']['NAME'] }}",
        "{{ ANALYTICS_API_CONFIG['DATABASES']['reports']['NAME'] }}" ]
    - [ "{{ ansible_hostname }}", "{{ inventory_hostname }}",
        "127.0.0.1", "::1"]


- name: setup the read-only db user
  mysql_user: >
    name={{ COMMON_MYSQL_READ_ONLY_USER }}
    password={{ COMMON_MYSQL_READ_ONLY_PASS }}
    priv='*.*:ALL'
    host={{ item }} 
  with_items:
    - "{{ ansible_hostname }}"
    - "{{ inventory_hostname }}"
    - 127.0.0.1
    - ::1    

- name: setup the admin db user
  mysql_user: >
    name={{ COMMON_MYSQL_ADMIN_USER }}
    password={{ COMMON_MYSQL_ADMIN_PASS }}
    priv='*.*:CREATE USER'
    host={{ item }} 
  with_items:
    - "{{ ansible_hostname }}"
    - "{{ inventory_hostname }}"
    - 127.0.0.1
    - ::1

- name: install memcached
  apt: pkg=memcached state=present
