# Installs packages to run edx locally on a single instance
# requires:
#  - group_vars/all
#  - common/tasks/main.yml
#
#  This installs mysql-server-5.5 though
#  in production we use mysql-5.1.62.
#
#  We could install from source instead:
#  http://downloads.mysql.com/archives/mysql-5.1/mysql-5.1.62.tar.gz
#
---

# Install PPA for installing MySQL 5.6 on Ubuntu 12.04LTS
- name: install ppa key
  apt_key:
    id=E5267A6C
    url='{{ COMMON_UBUNTU_APT_KEYSERVER }}0x14AA40EC0831756756D7F66C4F4EA0AAE5267A6C'
    state=present

- name: install apt repository
  apt_repository_1.8:
    repo='deb http://ppa.launchpad.net/ondrej/mysql-5.6/ubuntu precise main'
    update_cache=yes validate_certs=no
  
- name: look for mysql 5.5
  shell: dpkg -L mysql-server-5.5
  ignore_errors: true
  register: mysql_55_installed

- include: remove_mysql_55.yml
  when: mysql_55_installed.rc != 1

- name: install mysql 56 and dependencies
  apt: pkg={{ item }} install_recommends=yes force=yes state=present
  with_items:
    - software-properties-common
    - mysql-server

- name: start mysql
  service: name=mysql state=started
    
- name: install packages needed for single server
  apt: pkg={{','.join(edxlocal_debian_pkgs)}} install_recommends=yes state=present

- name: setup the edxapp db user
  mysql_user: >
    name={{ EDXAPP_MYSQL_USER }}
    password={{ EDXAPP_MYSQL_PASSWORD }}
    priv='{{ EDXAPP_MYSQL_DB_NAME }}.*:ALL'
  when: EDXAPP_MYSQL_USER is defined

- name: create a database for edxapp
  mysql_db: >
    db=edxapp
    state=present
    encoding=utf8
  when: EDXAPP_MYSQL_USER is defined

- name: setup the xqueue db user
  mysql_user: >
    name={{ XQUEUE_MYSQL_USER }}
    password={{ XQUEUE_MYSQL_PASSWORD }}
    priv='{{ XQUEUE_MYSQL_DB_NAME }}.*:ALL'
  when: XQUEUE_MYSQL_USER is defined

- name: create a database for xqueue
  mysql_db: >
    db=xqueue
    state=present
    encoding=utf8
  when: XQUEUE_MYSQL_USER is defined

- name: setup the ora db user
  mysql_user: >
    name={{ ORA_MYSQL_USER }}
    password={{ ORA_MYSQL_PASSWORD }}
    priv='{{ ORA_MYSQL_DB_NAME }}.*:ALL'
  when: ORA_MYSQL_USER is defined

- name: create a database for ora
  mysql_db: >
    db=ora
    state=present
    encoding=utf8
  when: ORA_MYSQL_USER is defined

- name: create databases for analytics api
  mysql_db: >
    db={{ item }}
    state=present
    encoding=utf8
  when: ANALYTICS_API_CONFIG is defined
  with_items:
    - "{{ ANALYTICS_API_CONFIG['DATABASES']['default']['NAME'] }}"
    - "{{ ANALYTICS_API_CONFIG['DATABASES']['reports']['NAME'] }}"


- name: create api user for the analytics api
  mysql_user: >
    name=api001
    password=password
    priv='{{ ANALYTICS_API_CONFIG['DATABASES']['default']['NAME'] }}.*:ALL/reports.*:SELECT'
  when: ANALYTICS_API_CONFIG is defined

- name: create read-only reports user for the analytics-api
  mysql_user: >
    name=reports001
    password=password
    priv='{{ ANALYTICS_API_CONFIG['DATABASES']['reports']['NAME'] }}.*:SELECT'
  when: ANALYTICS_API_CONFIG is defined

- name: setup the edx-notes-api db user
  mysql_user: >
    name={{ EDX_NOTES_API_MYSQL_DB_USER }}
    password={{ EDX_NOTES_API_MYSQL_DB_PASS }}
    priv='{{ EDX_NOTES_API_MYSQL_DB_NAME }}.*:SELECT,INSERT,UPDATE,DELETE'
  when: EDX_NOTES_API_MYSQL_DB_USER is defined

- name: create a database for edx-notes-api
  mysql_db: >
    db={{ EDX_NOTES_API_MYSQL_DB_NAME }}
    state=present
    encoding=utf8
  when: EDX_NOTES_API_MYSQL_DB_USER is defined

- name: setup the migration db user
  mysql_user: >
    name={{ COMMON_MYSQL_MIGRATE_USER }}
    password={{ COMMON_MYSQL_MIGRATE_PASS }}
    priv='{{ item }}.*:ALL'
    append_privs=yes
  when: item != 'None'
  with_items:
    - "{{ EDXAPP_MYSQL_DB_NAME|default('None') }}"
    - "{{ XQUEUE_MYSQL_DB_NAME|default('None') }}"
    - "{{ ORA_MYSQL_DB_NAME|default('None') }}"
    - "{{ EDX_NOTES_API_MYSQL_DB_NAME|default('None') }}"

- name: setup the migration db user for analytics
  mysql_user: >
    name={{ COMMON_MYSQL_MIGRATE_USER }}
    password={{ COMMON_MYSQL_MIGRATE_PASS }}
    priv='{{ item }}.*:ALL'
    append_privs=yes
  when: ANALYTICS_API_CONFIG is defined
  with_items:
    - "{{ ANALYTICS_API_CONFIG['DATABASES']['default']['NAME'] }}"
    - "{{ ANALYTICS_API_CONFIG['DATABASES']['reports']['NAME'] }}"


- name: setup the read-only db user
  mysql_user: >
    name={{ COMMON_MYSQL_READ_ONLY_USER }}
    password={{ COMMON_MYSQL_READ_ONLY_PASS }}
    priv='*.*:ALL'

- name: setup the admin db user
  mysql_user: >
    name={{ COMMON_MYSQL_ADMIN_USER }}
    password={{ COMMON_MYSQL_ADMIN_PASS }}
    priv='*.*:CREATE USER'


- name: install memcached
  apt: pkg=memcached state=present
