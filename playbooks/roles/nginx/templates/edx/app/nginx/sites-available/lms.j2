{%- if "lms" in nginx_default_sites -%}
  {%- set default_site = "default_server" -%}
{%- else -%}
  {%- set default_site = "" -%}
{%- endif -%}

upstream lms-backend {
    {% for host in nginx_lms_gunicorn_hosts %}
        server {{ host }}:{{ edxapp_lms_gunicorn_port }} fail_timeout=0;
    {% endfor %}

}

{%- if EDXAPP_ENABLE_RATE_LIMITING -%}
# Make Zone
limit_req_zone $cookie_{{ EDXAPP_SESSION_COOKIE_NAME }} zone=cookies:10m rate={{ EDXAPP_COURSES_REQUEST_RATE }};

{% for agent in EDXAPP_RATE_LIMITED_USER_AGENTS %}

# Map of http user agent with name limit_bot_agent_alias having binary IP of the agent
map $http_user_agent {{ "$limit_bot_" ~ agent.alias }} {
          {{ agent.agent_name }} $binary_remote_addr;
      }

limit_req_zone {{ "$limit_bot_" ~ agent.alias }} zone=agents:10m rate={{ agent.rate }};
{% endfor %}

{%- endif %}


{% if NGINX_EDXAPP_EMBARGO_CIDRS %}
  {%- if NGINX_SET_X_FORWARDED_HEADERS %}
geo $remote_addr $embargo {
  {%- else %}
geo $http_x_forwarded_for $embargo {
  {% endif -%}
  default 0;

  {% for cidr in NGINX_EDXAPP_EMBARGO_CIDRS -%}
  {{ cidr }} 1;
  {% endfor %}

}
{%- endif %}


{% if EDXAPP_CORS_ORIGIN_WHITELIST|length > 0 %}
  # The Origin request header indicates where a fetch originates from. It doesn't include any path information,
  # but only the server name (e.g. https://www.example.com).
  # See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin for details.
  #
  # Here we set the value that is included in the Access-Control-Allow-Origin response header. If the origin is one
  # of our known hosts--served via HTTP or HTTPS--we allow for CORS. Otherwise, we set the "null" value, disallowing CORS.
  map $http_origin $cors_origin {
  default "null";
  {% for host in EDXAPP_CORS_ORIGIN_WHITELIST %}
    "~*^https?:\/\/{{ host|replace('.', '\.') }}$" $http_origin;
  {% endfor %}
  }
{% endif %}


server {
  # LMS configuration file for nginx, templated by ansible

  {% if NGINX_EDXAPP_ENABLE_S3_MAINTENANCE %}

  # Do not include a 502 error in NGINX_ERROR_PAGES when
  # NGINX_EDXAPP_ENABLE_S3_MAINTENANCE is enabled.

  error_page 502 @maintenance;

    {% include "s3_maintenance.j2" %}

  {% endif %}

  # error pages
  {% for k, v in NGINX_EDXAPP_ERROR_PAGES.items() %}
error_page {{ k }} {{ v }};
  {% endfor %}

  {% if NGINX_EDXAPP_PROXY_INTERCEPT_ERRORS %}
  proxy_intercept_errors on;
  {% endif %}

{% include "empty_json.j2" %}

  listen {{ EDXAPP_LMS_NGINX_PORT }} {{ default_site }};

  {% if NGINX_ENABLE_SSL %}
  listen {{ EDXAPP_LMS_SSL_NGINX_PORT }} {{ default_site }} ssl;

  ssl_certificate /etc/ssl/certs/{{ NGINX_SSL_CERTIFICATE|basename }};
  ssl_certificate_key /etc/ssl/private/{{ NGINX_SSL_KEY|basename }};
  {% endif %}

  {% if NGINX_ENABLE_SSL or NGINX_REDIRECT_TO_HTTPS %}
  # request the browser to use SSL for all connections
  add_header Strict-Transport-Security "max-age={{ NGINX_HSTS_MAX_AGE }}; includeSubDomains";
  {% endif %}

  # prevent the browser from doing MIME-type sniffing
  add_header X-Content-Type-Options nosniff;

  # Prevent invalid display courseware in IE 10+ with high privacy settings
  add_header P3P '{{ NGINX_P3P_MESSAGE }}';


  {% include "handle-tls-redirect-and-ip-disclosure.j2" %}

  access_log {{ nginx_log_dir }}/access.log {{ NGINX_LOG_FORMAT_NAME }};
  error_log {{ nginx_log_dir }}/error.log error;

  # Some Master's courses require submissions up to 20MB in size.
  # CMS requires larger value for course assets, values provided
  # via hiera.
  client_max_body_size 20M;

  rewrite ^(.*)/favicon.ico$ {{ NGINX_EDXAPP_FAVICON_PATH }} last;

  {% include "python_lib.zip.j2" %}
  {% include "common-settings.j2" %}

  {% if NGINX_EDXAPP_EMBARGO_CIDRS -%}
  #only redirect to embargo when $embargo == true and $uri != $embargo_url
  #this is a hack to do multiple conditionals
  set $embargo_url "/embargo/blocked-message/courseware/embargo/";
  if ( $embargo ) {
    set $do_embargo "A";
  }
  if ( $uri != $embargo_url ) {
    set $do_embargo "${do_embargo}B";
  }
  if ( $do_embargo = "AB" ) {
    return 302 $embargo_url;
  }
  {% endif -%}

  location @proxy_to_lms_app {
{% include "lms_proxy.j2" %}

  }

  location @proxy_to_lms_app_api {
    error_page 504 @empty_json;
    error_page 502 @empty_json;
    error_page 500 @empty_json;

{% include "lms_proxy.j2" %}
  }

  location / {
    {% if EDXAPP_LMS_ENABLE_BASIC_AUTH|bool %}
      {% include "basic-auth.j2" %}
    {% endif %}

    try_files $uri @proxy_to_lms_app;
  }

  # /login?next=<any image> can be used by 3rd party sites in <img> tags to
  # determine whether a user on their site is logged into edX.
  # The most common image to use is favicon.ico.
  location /login {
    if ( $arg_next ~* "favicon.ico" ) {
      access_log off;
      return 403;
    }

    try_files $uri @proxy_to_lms_app;
  }

{% if NGINX_EDXAPP_EMBARGO_CIDRS %}
  location $embargo_url {
    try_files $uri @proxy_to_lms_app;
  }
{% endif %}

  # No basic auth for /segmentio/event
  location /segmentio/event {
    try_files $uri @proxy_to_lms_app;
  }

  # The api is accessed using OAUTH2 which
  # uses the authorization header so we can't have
  # basic auth on it as well.
  location /api {
    try_files $uri @proxy_to_lms_app_api;
  }

  location /login_refresh {
    try_files $uri @proxy_to_lms_app_api;
  }

  #enterprise API
  location /enterprise/api {
    try_files $uri @proxy_to_lms_app_api;
  }

  # Consent API
  location /consent/api {
    try_files $uri @proxy_to_lms_app_api;
  }

  # Need a separate location for the image uploads endpoint to limit upload sizes
  location ~ ^/api/profile_images/[^/]*/[^/]*/upload$ {
    try_files $uri @proxy_to_lms_app_api;
    client_max_body_size {{ EDXAPP_PROFILE_IMAGE_MAX_BYTES + 1000 }};
  }

  location /notifier_api {
    try_files $uri @proxy_to_lms_app_api;
  }

  location /user_api {
    try_files $uri @proxy_to_lms_app_api;
  }

  # No basic auth security on the github_service_hook url, so that github can use it for cms
  location /github_service_hook {
    try_files $uri @proxy_to_lms_app;
  }

  # No basic auth security on oauth2 endpoint
  location /oauth2 {
    try_files $uri @proxy_to_lms_app;
  }

  # No basic auth security on third party auth endpoints
  location /auth {
    try_files $uri @proxy_to_lms_app;
  }

  # No basic auth on the XBlock View endpoint, which can use OAuth2
  location ~ ^/courses/.*/xblock/.*/view/ {
    try_files $uri @proxy_to_lms_app;
  }

  # No basic auth on XBlock handlers, which can use OAuth2
  location ~ ^/courses/.*/xblock/.*/handler/ {
    try_files $uri @proxy_to_lms_app;
  }

  # No basic auth security on assets
  location /c4x {
    try_files $uri @proxy_to_lms_app;
  }

  location /asset {
    try_files $uri @proxy_to_lms_app;
  }

  # No basic auth security on the heartbeat url, so that ELB can use it
  location /heartbeat {
    # If /edx/var/nginx/server-static/maintenance_heartbeat.txt exists serve an
    # empty 200 so the instance stays in the load balancer to serve the
    # maintenance page
    if (-f /edx/var/nginx/server-static/maintenance_heartbeat.txt) {
       return 200;
    }
    try_files $uri @proxy_to_lms_app;
  }

  # No basic auth on the LTI provider endpoint, it does OAuth1
  location /lti_provider {
    try_files $uri @proxy_to_lms_app;
  }

  # No basic auth on LTI component grade.
  location ~ /handler_noauth {
    try_files $uri @proxy_to_lms_app;
  }

  location /courses {
    {%- if EDXAPP_ENABLE_RATE_LIMITING -%}
    # Set Limit
    limit_req zone=cookies burst={{ EDXAPP_COURSES_REQUEST_BURST_RATE }};

    {%- if EDXAPP_RATE_LIMITED_USER_AGENTS|length > 0 %}
    limit_req zone=agents burst={{ EDXAPP_COURSES_USER_AGENT_BURST_RATE }};
    {%- endif %}
    error_page  503 = /server/rate-limit.html;
    {%- endif -%}

    {% if EDXAPP_LMS_ENABLE_BASIC_AUTH|bool %}
      {%- include "basic-auth.j2" %}
    {% endif %}
    try_files $uri @proxy_to_lms_app;
  }

location ~ ^{{ EDXAPP_MEDIA_URL }}/(?P<file>.*) {
    root {{ edxapp_media_dir }};
    try_files /$file =404;
    expires {{ EDXAPP_PROFILE_IMAGE_MAX_AGE }}s;
}

{% if NGINX_ADMIN_ACCESS_CIDRS and EDXAPP_ENABLE_DJANGO_ADMIN_RESTRICTION %}
  location /admin {
    real_ip_header X-Forwarded-For;
    set_real_ip_from {{ NGINX_TRUSTED_IP_CIDRS }};
    {% for cidr in NGINX_ADMIN_ACCESS_CIDRS %}
      allow {{ cidr }};
    {% endfor %}
      deny all;
      try_files $uri @proxy_to_lms_app;
  }
{% endif %}

  {% include "robots.j2" %}
  {% include "static-files.j2" %}
  {% include "extra_locations_lms.j2" ignore missing %}

}
