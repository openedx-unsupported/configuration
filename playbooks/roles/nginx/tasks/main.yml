# requires:
#   - common/tasks/main.yml
---

- name: nginx | create nginx app dirs
  file: >
    path="{{ item }}"
    state=directory
    owner="{{ nginx_user }}"
    group="{{ common_web_group }}"
  with_items:
    - "{{ nginx_app_dir }}"
    - "{{ nginx_sites_available_dir }}"
    - "{{ nginx_sites_enabled_dir }}"
  notify: nginx | restart nginx

- name: nginx | create nginx data dirs
  file: >
    path="{{ item }}"
    state=directory
    owner="{{ common_web_user }}"
    group="{{ nginx_user }}"
  with_items:
    - "{{ nginx_data_dir }}"
    - "{{ nginx_log_dir }}"
  notify: nginx | restart nginx

- name: nginx | Install nginx
  apt: pkg=nginx state={{ pkgs.nginx.state }}
  notify: nginx | restart nginx

- name: nginx | Server configuration file
  template: >
    src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
    owner=root group={{ common_web_user }} mode=0644
  notify: nginx | reload nginx

- name: nginx | Creating common nginx configuration
  template: >
    src=edx-release.j2 dest={{ nginx_sites_available_dir }}/edx-release
    owner=root group=root mode=0600
  notify: nginx | reload nginx

- name: nginx | Creating link for common nginx configuration
  file: >
    src={{ nginx_sites_available_dir }}/edx-release
    dest={{ nginx_sites_enabled_dir }}/edx-release
    state=link owner=root group=root
  notify: nginx | reload nginx

- name: nginx | Copying nginx configs for {{ nginx_sites }}
  template: >
    src={{ item }}.j2 dest={{ nginx_sites_available_dir }}/{{ item }}
    owner=root group={{ common_web_user }} mode=0640
  notify: nginx | reload nginx
  with_items: nginx_sites

- name: nginx | Creating nginx config links for {{ nginx_sites }}
  file: >
    src={{ nginx_sites_available_dir }}/{{ item  }}
    dest={{ nginx_sites_enabled_dir }}/{{ item }}
    state=link owner=root group=root
  notify: nginx | reload nginx
  with_items: nginx_sites

- include: ssl.yml
  when: "'lms-ssl' in nginx_sites"

- name: nginx | Write out default htpasswd file
  copy: >
    content={{ nginx_cfg.htpasswd }} dest={{ nginx_app_dir }}/nginx.htpasswd
    owner=www-data group=www-data mode=0600

- name: nginx | Create nginx log file location (just in case)
  file: >
    path={{ nginx_log_dir}} state=directory
    owner={{ common_web_user }} group={{ common_web_user }}

# removing default link
- name: nginx | Removing default nginx config and restart (enabled)
  file: path={{ nginx_sites_enabled_dir }}/default state=absent
  notify: nginx | reload nginx

# Note that nginx logs to /var/log until it reads its configuration, so /etc/logrotate.d/nginx is still good

- name: nginx | Set up nginx access log rotation
  template: >
    dest=/etc/logrotate.d/nginx-access src=edx_logrotate_nginx_access.j2
    owner=root group=root mode=644

- name: nginx | Set up nginx access log rotation
  template: >
    dest=/etc/logrotate.d/nginx-error src=edx_logrotate_nginx_error.j2
    owner=root group=root mode=644

# If tasks that notify restart nginx don't change the state of the remote system
# their corresponding notifications don't get run.  If nginx has been stopped for
# any reason, this will ensure that it is started up again.
- name: nginx | make sure nginx has started
  service: name=nginx state=started
